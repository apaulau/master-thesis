variogram.classical = autofitVariogram(data~1, spdata, cutoff=l, cressie=FALSE, width=width)
variogram.robust = autofitVariogram(data~1, spdata, cutoff=l, cressie=TRUE, width=width)
classicalResult[i] <- variogram.classical$sserr / l
robustResult[i] <- variogram.robust$sserr / l
i = i + 1
}
ggplot() +
geom_line(data=data.frame("X"=lens, "Y"=classicalResult), aes(x=X, y=Y, color="classic")) +
geom_line(data=data.frame("X"=lens, "Y"=robustResult), aes(x=X, y=Y, color="cressie")) +
scale_x_continuous(breaks=lens) +
scale_y_continuous(breaks=seq(1.04 * min(classicalResult, robustResult), 1.04 * max(classicalResult, robustResult), 1))
}
ComputeManualVariogram <- function (data, cutoff, model="Sph", file=FALSE, file_modeled="") {
# Make fake second coordinate
p <- data.frame("X"=c(1:kObservationNum), "Y"=rep(1, kObservationNum))
coordinates(p) <- ~ X + Y
experimental_variogram <- variogram(data~1, p, width=1, cutoff=cutoff)
model.variog <- vgm(model=model, range=3.9, nugget=3.4)
fit.variog <- fit.variogram(experimental_variogram, model.variog)
if (file) {
# Arrange the data for the ggplot2 plot
# add the semivariance values of v2 to v1
Fitted <- data.frame(dist = seq(0.01, max(experimental_variogram$dist), length = kObservationNum))
Fitted$gamma <- variogramLine(fit.variog, dist_vector = Fitted$dist)$gamma
#convert the dataframes to a long format
Empirical <- melt(experimental_variogram, id.vars = "dist", measure.vars = c("gamma"))
Modeled <- melt(Fitted, id.vars = "dist", measure.vars = c("gamma"))
plot.modeled <- ggplot(Empirical, aes(x = dist, y = value)) +  geom_point() +
geom_line(data = Modeled, color='blue') +
scale_y_continuous(expand=c(0,0),
breaks=seq(0, 1.04 * max(experimental_variogram$gamma), 1),
limits=c(min(0, 1.04 * min(experimental_variogram$gamma)), 1.04 * max(experimental_variogram$gamma))) +
scale_x_continuous(expand=c(0,0),
breaks=seq(0, 1.04 * max(experimental_variogram$dist), 1),
limits=c(0, 1.04 * max(experimental_variogram$dist))) +
xlab("Расстояние") + ylab("Значение")
ggsave(plot=plot.modeled, file=file_modeled, width=7, height=4)
}
print(xtable(data.frame("Модель"=fit.variog$model, "Порог"=fit.variog$psill, "Ранг"=fit.variog$range), caption="Модель вариограммы", label="table:manual_model"), table.placement="H",
file="out/variogram/manual-model.tex")
result = list(exp_var = experimental_variogram, var_model = fit.variog)
}
## Calculates modeled variogram and creates plot of it.
ComputeVariogram <- function (data, x, y=rep(1, kObservationNum), file_empirical="", file_modeled="", cressie, cutoff, width) {
spdata <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(spdata) = ~x+y
variogram <- autofitVariogram(data~1, spdata, cutoff=cutoff, cressie=cressie, width=width)
if (nchar(file_empirical)) { ## here was another check: just <file>
# Arrange the data for the ggplot2 plot
# add the semivariance values of v2 to v1
Fitted <- data.frame(dist = seq(.01, max(variogram$exp_var$dist), length = kObservationNum))
Fitted$gamma <- variogramLine(variogram$var_model, dist_vector = Fitted$dist)$gamma
#convert the dataframes to a long format
Empirical <- melt(variogram$exp_var, id.vars="dist", measure.vars=c("gamma"))
Modeled <- melt(Fitted, id.vars="dist", measure.vars=c("gamma"))
plot.empirical <- ggplot(Empirical, aes(x=dist, y=value)) +  geom_point() +
scale_y_continuous(expand = c(0, 0), breaks=seq(0, 7, 1), limits=c(min(0, 1.04 * min(variogram$exp_var$gamma)), 1.04 * max(variogram$exp_var$gamma))) +
scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1.04 * max(variogram$exp_var$dist), 2), limits=c(0, 1.04 * max(variogram$exp_var$dist))) +
xlab("Расстояние") + ylab("Значение")
ggsave(plot=plot.empirical, file=file_empirical, width=7, height=4)
}
if (nchar(file_modeled)) {
plot.modeled <- ggplot(Empirical, aes(x=dist, y=value)) +  geom_point() +
geom_line(data=Modeled, color='blue') +
scale_y_continuous(expand=c(0, 0),
breaks=seq(0, 1.04 * max(variogram$exp_var$gamma), 1),
limits=c(min(0, 1.04 * min(variogram$exp_var$gamma)), 1.04 * max(variogram$exp_var$gamma))) +
scale_x_continuous(expand=c(0, 0),
breaks=seq(0, 1.04 * max(variogram$exp_var$dist), 1),
limits=c(0, 1.04 * max(variogram$exp_var$dist))) +
xlab("Расстояние") + ylab("Значение")
ggsave(plot=plot.modeled, file=file_modeled, width=7, height=4)
}
variogram
}
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, file=TRUE, file_modeled="figures/variogram/manual-model.png")
ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", file=TRUE, file_modeled="figures/variogram/manual-model.png")
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, file=TRUE, file_modeled="figures/variogram/manual-model.png")
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, file=TRUE, file_modeled="figures/variogram/manual-linear-model.png")
ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", file=TRUE, file_modeled="figures/variogram/manual-linear-model.png")
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", file=TRUE, file_modeled="figures/variogram/manual-linear-model.png")
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
res.manual <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.manual,    "figures/variogram/cross-prediction-manual.png")
mse.manual    <- MSE(res.manual)
source('~/study/bachelors-thesis/R/lib/variogram.R', echo=TRUE)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", file=TRUE, file_modeled="figures/variogram/manual-linear-model.png")
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", file_modeled="figures/variogram/manual-linear-model.png")
source('~/.active-rstudio-document', echo=TRUE)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", file_modeled="figures/variogram/manual-linear-model.png")
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, file_modeled="figures/variogram/manual-linear-model.png")
source('~/study/bachelors-thesis/R/lib/variogram.R', echo=TRUE)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, file_modeled="figures/variogram/manual-linear-model.png")
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, file_modeled="figures/variogram/manual-linear-model.png", fit=FALSE)
source('~/.active-rstudio-document', echo=TRUE)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, psill=1, file_modeled="figures/variogram/manual-linear-model.png", fit=FALSE)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, range=0, psill=1, file_modeled="figures/variogram/manual-linear-model.png", fit=FALSE)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, range=0, psill=.1, file_modeled="figures/variogram/manual-linear-model.png", fit=FALSE)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, range=0, psill=.1, file_modeled="figures/variogram/manual-linear-model.png", fit=TRUE)
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
res.manual <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.manual,    "figures/variogram/cross-prediction-manual.png")
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, range=0, psill=2, file_modeled="figures/variogram/manual-linear-model.png", fit=FALSE)
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, range=0, psill=1, file_modeled="figures/variogram/manual-linear-model.png", fit=FALSE)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, range=0, psill=.5, file_modeled="figures/variogram/manual-linear-model.png", fit=FALSE)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, range=0, psill=.3, file_modeled="figures/variogram/manual-linear-model.png", fit=FALSE)
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, model="Lin", nugget=0, range=0, psill=.1, file_modeled="figures/variogram/manual-linear-model.png", fit=FALSE)
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
ComputeManualVariogram(research.data.residuals, cutoff=cutoff, file_modeled="figures/variogram/manual-model.png")
ComputeManualVariogram(research.data.residuals, cutoff=:, file_modeled="figures/variogram/manual-model.png")
ComputeManualVariogram(research.data.residuals, cutoff=5, file_modeled="figures/variogram/manual-model.png")
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
source('~/study/bachelors-thesis/R/lib/variogram.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/variogram.R', echo=TRUE)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, file_modeled="figures/variogram/manual-model.png")
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=5, file_modeled="figures/variogram/manual-model.png")
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
kriging.manual$var1.pred
kriging.manual$var1.pred
1
kriging.manual$var1.pred
# Compute variogram manually with choosed model (best what i could found)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, file_modeled="figures/variogram/manual-model.png")
# Compute variogram with auto fit model using classical estimation
variogram.classical <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=FALSE, cutoff=cutoff, width=FALSE,
file_empirical="figures/variogram/classical-empirical.png",
file_modeled="figures/variogram/classical-modeled.png")
# Compute variogram with auto fit model using robust (cressie) estimation
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=FALSE,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
models.comparison <- CompareClassicalModels(variogram.manual, variogram.classical, filename="figures/variogram/models-comparison.png")
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
kriging.classical <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.classical$var_model)
kriging.robust    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.robust$var_model)
prediction.manual <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.manual$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.manual, caption="Прогноз (сферическая модель)", label="table:prediction-manual", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-manual.tex")
prediction.classical <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.classical$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.classical, caption="Прогноз (классическая оценка)", label="table:prediction-classical", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-classical.tex")
prediction.robust <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.robust$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.robust, caption="Прогноз (робастная оценка)", label="table:prediction-robust", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-robust.tex")
## Dependencies
library(ggplot2)  # eye-candy graphs
library(xtable)   # convert data to latex tables
library(outliers) # tests for outliers
library(tseries)  # adf test used
library(nortest)  # tests for normality
library(sp)       # spatial data
library(gstat)    # geostatistics
library(reshape2) # will see
## Import local modules
source("R/lib/plot.R")       # useful functions for more comfortable plotting
source("R/lib/dstats.R")     # descriptive statistics module
source("R/lib/misc.R")       # some useful global-use functions
source("R/lib/draw.R")       # helpers for drawing
source("R/lib/write.R")      # helpers for writing
source("R/lib/ntest.R")      # tests for normality
# Compute variogram manually with choosed model (best what i could found)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, file_modeled="figures/variogram/manual-model.png")
# Compute variogram with auto fit model using classical estimation
variogram.classical <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=FALSE, cutoff=cutoff, width=FALSE,
file_empirical="figures/variogram/classical-empirical.png",
file_modeled="figures/variogram/classical-modeled.png")
# Compute variogram with auto fit model using robust (cressie) estimation
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=FALSE,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
models.comparison <- CompareClassicalModels(variogram.manual, variogram.classical, filename="figures/variogram/models-comparison.png")
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
kriging.classical <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.classical$var_model)
kriging.robust    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.robust$var_model)
prediction.manual <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.manual$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.manual, caption="Прогноз (сферическая модель)", label="table:prediction-manual", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-manual.tex")
prediction.classical <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.classical$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.classical, caption="Прогноз (классическая оценка)", label="table:prediction-classical", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-classical.tex")
prediction.robust <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.robust$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.robust, caption="Прогноз (робастная оценка)", label="table:prediction-robust", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-robust.tex")
res.manual <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.manual,    "figures/variogram/cross-prediction-manual.png")
res.classical <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.classical, "figures/variogram/cross-prediction-classical.png")
res.robust <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust,    "figures/variogram/cross-prediction-robust.png")
mse.manual    <- MSE(res.manual)
mse.classical <- MSE(res.classical)
mse.robust    <- MSE(res.robust)
WriteCharacteristic(mse.manual, type="variogram", name="manual-mse")
WriteCharacteristic(mse.classical, type="variogram", name="classical-mse")
WriteCharacteristic(mse.robust, type="variogram", name="robust-mse")
# Find best cutoff parameter
ComparePredictionParameters(research.data.residuals, research.data.trend, ConvertYearsToNum(research.data$year), filename="figures/variogram/parameter-comparison.png")
# Best prediction as we investigated is for robust kriging with cutoff=6. Let's make it!
variogram.robust.best <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=6, width=FALSE,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
kriging.robust.best <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.robust.best$var_model)
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
mse.robust.best <- MSE(res.robust.best)
prediction.robust.best <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.robust.best$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.robust.best, caption="Наилучший прогноз (робастная оценка)", label="table:prediction-robust-best", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-robust-best.tex")
WriteCharacteristic(mse.robust.best, type="variogram", name="robust-best-mse")
source("R/lib/afv.R")
source("R/lib/variogram.R")
source("R/lib/kriging.R")
## Function definition: need to be moved into isolated place
### Just definition of mean standard error // TODO: find out exact formula and describe each parameter
MSE <- function (e, N=1) {
sum(sapply(X=e, FUN=function(x) x**2)) / length(e)
}
# Completes trend values up to source observation number
computeTrend <- function (fit, future=0) {
c(sapply(c(1 : (src.nrows + future)), FUN=function(x) fit$coefficients[[1]] + x * fit$coefficients[[2]]))
}
kObservationNum <- 32
## Form the data for research again
research.data <- src.data[0:kObservationNum, ]
research.data.fit <- lm(research.data$temperature ~ ConvertYearsToNum(research.data$year))
research.data.residuals <- research.data.fit$residuals
research.data.trend <- computeTrend(research.data.fit)
cutoff <- trunc(2 * kObservationNum / 3) # let it be "classical" value
#cutoff <- 2
# Draw H-Scatterplot
research.data.hscat <- DrawHScatterplot(research.data.residuals[1:kObservationNum], cutoff)
# Compute variogram manually with choosed model (best what i could found)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, file_modeled="figures/variogram/manual-model.png")
# Compute variogram with auto fit model using classical estimation
variogram.classical <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=FALSE, cutoff=cutoff, width=FALSE,
file_empirical="figures/variogram/classical-empirical.png",
file_modeled="figures/variogram/classical-modeled.png")
# Compute variogram with auto fit model using robust (cressie) estimation
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=FALSE,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
models.comparison <- CompareClassicalModels(variogram.manual, variogram.classical, filename="figures/variogram/models-comparison.png")
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
kriging.classical <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.classical$var_model)
kriging.robust    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.robust$var_model)
prediction.manual <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.manual$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.manual, caption="Прогноз (сферическая модель)", label="table:prediction-manual", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-manual.tex")
prediction.classical <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.classical$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.classical, caption="Прогноз (классическая оценка)", label="table:prediction-classical", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-classical.tex")
prediction.robust <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.robust$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.robust, caption="Прогноз (робастная оценка)", label="table:prediction-robust", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-robust.tex")
res.manual <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.manual,    "figures/variogram/cross-prediction-manual.png")
res.classical <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.classical, "figures/variogram/cross-prediction-classical.png")
res.robust <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust,    "figures/variogram/cross-prediction-robust.png")
mse.manual    <- MSE(res.manual)
mse.classical <- MSE(res.classical)
mse.robust    <- MSE(res.robust)
WriteCharacteristic(mse.manual, type="variogram", name="manual-mse")
WriteCharacteristic(mse.classical, type="variogram", name="classical-mse")
WriteCharacteristic(mse.robust, type="variogram", name="robust-mse")
# Find best cutoff parameter
ComparePredictionParameters(research.data.residuals, research.data.trend, ConvertYearsToNum(research.data$year), filename="figures/variogram/parameter-comparison.png")
# Best prediction as we investigated is for robust kriging with cutoff=6. Let's make it!
variogram.robust.best <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=6, width=FALSE,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
kriging.robust.best <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.robust.best$var_model)
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
mse.robust.best <- MSE(res.robust.best)
prediction.robust.best <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.robust.best$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.robust.best, caption="Наилучший прогноз (робастная оценка)", label="table:prediction-robust-best", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-robust-best.tex")
WriteCharacteristic(mse.robust.best, type="variogram", name="robust-best-mse")
## TODO: form krige matrix for analysis
variogram.manual
variogram.manual$var_model
variogram.manual$var_model[psill]
variogram.manual$var_model["psill"]
variogram.manual$var_model[[2]]
variogram.manual$var_model[[2]][1]
variogram.manual$var_model[[3]][2]
WriteCharacteristic(variogram.manual$var_model[[2]][1], type="variogram", name="nug-psill")
WriteCharacteristic(variogram.manual$var_model[[2]][2], type="variogram", name="sph-psill")
WriteCharacteristic(variogram.manual$var_model[[3]][2], type="variogram", name="sph-range")
WriteCharacteristic(variogram.manual$var_model[[2]][1], type="variogram", name="sph-nug-psill")
WriteCharacteristic(variogram.classical$var_model[[2]][1], type="variogram", name="classical-nug-psill")
WriteCharacteristic(variogram.classical$var_model[[2]][2], type="variogram", name="classical-psill")
WriteCharacteristic(variogram.classical$var_model[[3]][2], type="variogram", name="classcial-range")
WriteCharacteristic(variogram.robust$var_model[[2]][1], type="variogram", name="robust-nug")
WriteCharacteristic(variogram.robust$var_model[[2]][2], type="variogram", name="robust-psill")
WriteCharacteristic(variogram.robust$var_model[[3]][2], type="variogram", name="robust-range")
WriteCharacteristic(variogram.classical$var_model[[3]][2], type="variogram", name="classical-range")
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, linetype="dashed") +
geom_line(data=prediction.trend, aes(x=year, y=temperature, linetype="dotdash") +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, linetype="dashed")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, linetype="dotdash")) +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, color="Прогноз Кригинг"), linetype="dashed") +
geom_line(data=prediction.trend, aes(x=year, y=temperature, color="Прогноз Тренд"), linetype="dotdash") +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, color="Прогноз Кригинг", linetype="dashed")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, color="Прогноз Тренд", linetype="dotdash")) +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
## Compares predictions based on trend and kriging with actual values
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, color="Прогноз Кригинг", linetype="Прогноз Кригинг")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, color="Прогноз Тренд", linetype="Прогноз Тренд")) +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_linetype_manual(name="Lines", values=c("Прогноз Кригинг"="dashed")) +
scale_linetype_manual(name="Lines", values=c("Прогноз Тренд"="dotdash")) +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, color="Прогноз Кригинг", linetype="Прогноз Кригинг")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, color="Прогноз Тренд", linetype="Прогноз Тренд")) +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_linetype_manual(name="Lines", values=c("Прогноз Кригинг"="dashed", "Прогноз Тренд"="dotdash")) +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
## Compares predictions based on trend and kriging with actual values
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, linetype="Прогноз Кригинг")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, linetype="Прогноз Тренд")) +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_linetype_manual(name="Lines", values=c("Прогноз Кригинг"="dashed", "Прогноз Тренд"="dotdash")) +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, linetype="Прогноз Кригинг")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, linetype="Прогноз Тренд")) +
geom_line(data=actual, aes(x=year, y=temperature, linetype="Актуальное")) +
labs(color="") +
scale_linetype_manual(name="Lines", values=c("Прогноз Кригинг"="dashed", "Прогноз Тренд"="dotdash", "Актуальное"="solid")) +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
qt(0.05, 35)
qt(0.95, 35)
qt(0.05, №)
qt(0.05, 1)
qt(0.95, 1)
