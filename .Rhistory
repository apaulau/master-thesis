return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows)
sample.residuals
sample.residuals[kObservationNum]
sample.residuals[kObservationNum:nrows]
src.data
src
lm(src)
lm(src$temperature ~ c(1:38) )
lm(src$temperature ~ c(1:38))$residuals[(kObservationNum+1):nrows)]
lm(src$temperature ~ c(1:38))$residuals[(kObservationNum+1):nrows]
computeAdapt <- function(data, x, var_model, observations, nrows) {
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
residuals <- lm(src$temperature ~ c(1:38))$residuals[(kObservationNum+1):nrows)] - krig$var1.pred
out <- residuals
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
residuals <- src[(kObservationNum+1):nrows] - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- residuals
return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
src[(kObservationNum+1):nrows]
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
residuals <- src$temperature[(kObservationNum+1):nrows] - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- residuals
return(out)
}
src[(kObservationNum+1):nrows]
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out$RSS <- RSS(esidual)
out$bias <- mean(observed) - mean(residual)
out$effectivity <- out$RSS / sum( (observed - mean(observed))^2 )
out$MAE = MAE(residual)
out$MSE = MSE(residual)
out$cor_obspred = cor(observed, krige$var1.pred)
if (out$cor_obspred == -1) {
out$cor_obspred = -0.04
}
return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
# Leave-one-out cross validation
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out$RSS <- RSS(residual)
out$bias <- mean(observed) - mean(residual)
out$effectivity <- out$RSS / sum( (observed - mean(observed))^2 )
out$MAE = MAE(residual)
out$MSE = MSE(residual)
out$cor_obspred = cor(observed, krige$var1.pred)
if (out$cor_obspred == -1) {
out$cor_obspred = -0.04
}
return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
src$temperature[(kObservationNum+1):nrows]- (krig$var1.pred + trend[(kObservationNum+1):nrows])
debugSource('~/study/bachelors-thesis/R/lib/kriging.R')
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
residual
RSS
RSS(residual)
# Leave-one-out cross validation
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out$RSS <- RSS(residual)
out$bias <- mean(observed) - mean(residual)
out$effectivity <- out$RSS / sum( (observed - mean(observed))^2 )
out$MAE = MAE(residual)
out$MSE = MSE(residual)
out$cor_obspred = cor(observed, krige$var1.pred)
if (out$cor_obspred == -1) {
out$cor_obspred = -0.04
}
return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out$RSS <- RSS(residual)
out$bias <- mean(observed) - mean(residual)
out$effectivity <- out$RSS / sum( (observed - mean(observed))^2 )
out$MAE = MAE(residual)
out$MSE = MSE(residual)
out$cor_obspred = cor(observed, krig$var1.pred)
if (out$cor_obspred == -1) {
out$cor_obspred = -0.04
}
return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out$RSS <- RSS(residual)
out$bias <- mean(observed) - mean(residual)
out$effectivity <- out$RSS / sum( (observed - mean(observed))^2 )
out$MAE = MAE(residual)
out$MSE = MSE(residual)
out$cor_obspred = cor(observed, krig$var1.pred)
#   if (out$cor_obspred == -1) {
#     out$cor_obspred = -0.04
#   }
return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
debugSource('~/study/bachelors-thesis/R/lib/kriging.R')
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
observed
krig$var1.pred
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out$RSS <- RSS(residual)
out$bias <- mean(observed) - mean(residual)
out$effectivity <- out$RSS / sum( (observed - mean(observed))^2 )
out$MAE = MAE(residual)
out$MSE = MSE(residual)
out$cor_obspred = cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])
#   if (out$cor_obspred == -1) {
#     out$cor_obspred = -0.04
#   }
return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out$RSS <- RSS(residual)
out$bias <- mean(observed) - mean(residual)
out$effectivity <- out$RSS / sum( (observed - mean(observed))^2 )
out$MAE = MAE(residual)
out$MSE = MSE(residual)
out$cor_obspred = cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])
if (out$cor_obspred == -1) {
out$cor_obspred = -0.04
}
return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit.adapt$var_model, nrows, trend = trend)
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
comp.st.ad
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
comp.st.ad
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred)))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
comp.st.ad
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
debugSource('~/study/bachelors-thesis/R/lib/kriging.R')
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
cor(observed, krig$var1.pred)
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows]))))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows]))))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
c
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
debugSource('~/study/bachelors-thesis/R/lib/kriging.R')
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])
out
Q
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
library(ggplot2)  # eye-candy graphs
library(xtable)   # convert data to latex tables
library(outliers) # tests for outliers
library(tseries)  # adf test used
library(nortest)  # tests for normality
library(sp)       # spatial data
library(gstat)    # geostatistics
library(reshape2) # will see
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, (krig$var1.pred + trend[(kObservationNum+1):nrows]))))
return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
source('~/study/bachelors-thesis/R/lib/kriging.R')
source('~/study/bachelors-thesis/R/lib/kriging.R')
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, (krig$var1.pred + trend[(kObservationNum+1):nrows])) == -1, -0.04, cor(observed, (krig$var1.pred + trend[(kObservationNum+1):nrows]))))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
