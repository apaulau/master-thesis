"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
comp.st.ad
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
debugSource('~/study/bachelors-thesis/R/lib/kriging.R')
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
cor(observed, krig$var1.pred)
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows]))))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows]))))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
c
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
debugSource('~/study/bachelors-thesis/R/lib/kriging.R')
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])
out
Q
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
library(ggplot2)  # eye-candy graphs
library(xtable)   # convert data to latex tables
library(outliers) # tests for outliers
library(tseries)  # adf test used
library(nortest)  # tests for normality
library(sp)       # spatial data
library(gstat)    # geostatistics
library(reshape2) # will see
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, krig$var1.pred + trend[(kObservationNum+1):nrows])))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, krig$var1.pred) == -1, -0.04, cor(observed, (krig$var1.pred + trend[(kObservationNum+1):nrows]))))
return(out)
}
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
source('~/study/bachelors-thesis/R/lib/kriging.R')
source('~/study/bachelors-thesis/R/lib/kriging.R')
computeAdapt(sample.residuals, x=ConvertYearsToNum(sample$year), observations=kObservationNum, var_model=lin.fit$var_model, nrows, trend = trend)
computeAdapt <- function(data, x, trend, var_model, observations, nrows) {
out = list()
krig <- PredictWithKriging(data = data, x = x, variogram_model = var_model, observations = observations, nrows = nrows)
observed <- src$temperature[(kObservationNum+1):nrows]
residual <- observed - (krig$var1.pred + trend[(kObservationNum+1):nrows])
out <- c(RSS(residual), RSS(residual) / sum((observed - mean(observed))^2), MAE(residual), MSE(residual), ifelse(cor(observed, (krig$var1.pred + trend[(kObservationNum+1):nrows])) == -1, -0.04, cor(observed, (krig$var1.pred + trend[(kObservationNum+1):nrows]))))
return(out)
}
comp.st.ad <- data.frame(
"lin"=computeAdapt(sample.residuals, lin$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit"=computeAdapt(sample.residuals, lin.fit$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-cv"=computeAdapt(sample.residuals, lin.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"lin-fit-adapt"=computeAdapt(sample.residuals, lin.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"sph-fit-adapt"=computeAdapt(sample.residuals, sph.fit.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"per-fit-cv"=computeAdapt(sample.residuals, per.fit.cv$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-20"=computeAdapt(sample.residuals, auto.class20$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-26"=computeAdapt(sample.residuals, auto.class26$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-rob-5"=computeAdapt(sample.residuals, auto.rob.adapt$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend),
"auto-class-18"=computeAdapt(sample.residuals, auto.class.adapt.prediction$var_model, kObservationNum, x=ConvertYearsToNum(sample$year), nrows = nrows, trend = trend))
colnames(comp.st.ad) <- c(
"$ \\widehat{\\gamma}_1(h) $",
"$ \\widehat{\\gamma}_2(h) $",
"$ \\widehat{\\gamma}_3(h) $",
"$ \\widehat{\\gamma}_4(h) $",
"$ \\widehat{\\gamma}_5(h) $",
"$ \\widehat{\\gamma}_6(h) $",
"$ \\widehat{\\gamma}_7(h) $",
"$ \\widehat{\\gamma}_8(h) $",
"$ \\widehat{\\gamma}_9(h) $",
"$ \\widehat{\\gamma}_{10}(h) $")
rownames(comp.st.ad) <- c(
"$ S $", "$ E $", "$ MAE $", "$ MSE $", "$ r_{\\varepsilon\\varepsilon^{*}} $")
print(xtable(comp.st.ad, caption="Сводная таблица адаптивных показателей качества моделей семивариограмм", label="table:summary-adapt", digits=c(0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2), align="r|cccccccccc"),
file="out/variogram/summary-adapt.tex", sanitize.text.function=function(x){x}, size="footnotesize", caption.placement = 'top')
ls
install.packages("xlsx")
install.packages("rJava")
install.packages("rJava")
install.packages("xlsx")
library('xlsx')
library('xlsx')
d <- read.xlsx2('data/ndb1955-2012.xls')
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино')
head(d)
tail(d)
d$Дата
as.date(d$Дата)
as.Date(d$Дата[1])
d$Дата[1]
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', stringsAsFactors = FALSE)
d$Дата[1]
as.Date(d$Дата[1])
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', stringsAsFactors = FALSE, colClasses = c("Date", "Factor", "Number"))
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', stringsAsFactors = FALSE, colClasses = c("Date", "String", "Number"))
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', stringsAsFactors = FALSE, colClasses = c("Date", "factor", "Number"))
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', stringsAsFactors = FALSE, colClasses = c("Date", "factor", "Numeric", "Numeric", "Numeric", "Numeric", "Numeric", "Numeric"))
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', stringsAsFactors = FALSE, colClasses = c("Date", "Character", "Numeric", "Numeric", "Numeric", "Numeric", "Numeric", "Numeric"))
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', stringsAsFactors = FALSE, colClasses = c("Date", "string", "Numeric", "Numeric", "Numeric", "Numeric", "Numeric", "Numeric"))
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', stringsAsFactors = FALSE, colClasses = c("Date", "string", rep("numeric", 6)))
library(xlsx)
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', stringsAsFactors = FALSE, colClasses = c("Date", "string", rep("numeric", 6)))
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', colClasses = c("Date", "string", rep("numeric", 6)))
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', colClasses = c("string", "string", rep("numeric", 6)))
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', colClasses = c("character", "character", rep("numeric", 6)))
d <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', colClasses = c("Date", "character", rep("numeric", 6)))
d
data <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', colClasses = c("Date", "character", rep("numeric", 6), NULL))
data
head(data)
data <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', colClasses = c("Date", "character", rep("numeric", 6)))
head(data)
data <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', colClasses = c("Date", "character", rep("numeric", 6), "NULL"))
data <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино', colIndex = 1:8, colClasses = c("Date", "character", rep("numeric", 6)))
head(data)
data <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино',
colIndex = 1:8, colClasses = c("Date", "character", rep("numeric", 6)),
col.names = c('Date', 'Point', 'Depth', 'Transparency', 'o2Solubility', 'Saturation'))
data <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино',
colIndex = 1:8, colClasses = c("Date", "character", rep("numeric", 6)),
col.names = c('Date', 'Point', 'Depth', 'Transparency', 'Horizont', 'Temperature', 'o2Solubility', 'Saturation'))
data <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино',
colIndex = 1:8, colClasses = c("Date", "character", rep("numeric", 6)))
colnames(data) <- c('Date', 'Point', 'Depth', 'Transparency', 'Horizont', 'Temperature', 'o2Solubility', 'Saturation')
head(data)
complete.cases(data)
data[complete.cases(data)]
data[complete.cases(data),]
df <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино',
colIndex = 1:8, colClasses = c("Date", "character", rep("numeric", 6)))
colnames(df) <- c('Date', 'Point', 'Depth', 'Transparency', 'Horizont', 'Temperature', 'o2Solubility', 'Saturation')
plot(df$Date, df$Temperature)
plot(df$Date, df$Temperature, type='l')
df$Point
levels(df$Point)
colnames(df) <- c('date', 'point', 'depth', 'transparency', 'horizont', 'temperature', 'o2solubility', 'saturation')
grep("ст", df$point)
df$point[grep("ст", df$point)]
df$point[grep("^ст", df$point)]
gsub("^ст.()", df$point, ignore.case = TRUE)
df$point[grep("литораль", df$point, ignore.case = TRUE)]
unique(df$point[grep("литораль", df$point, ignore.case = TRUE)])
unique(df$point[grep("пелагиаль", df$point, ignore.case = TRUE)])
unique(df$point[grep("\, ст\. (\d)$", df$point, ignore.case = TRUE)])
unique(df$point[grep("\\, ст\\. (\d)$", df$point, ignore.case = TRUE)])
unique(df$point[grep("\\, ст\\. (\\d)$", df$point, ignore.case = TRUE)])
gsub("\\, ст\\. (\\d)$", "$1" df$point, ignore.case = TRUE)
gsub("\\, ст\\. (\\d)$", "\\1" df$point, ignore.case = TRUE)
gsub("\\, ст\\. (\\d)$", "1" df$point, ignore.case = TRUE)
gsub("\\, ст\\. (\\d)$", "1", df$point, ignore.case = TRUE)
gsub("\\, ст\\. (\\d)$", "\\-$1", df$point, ignore.case = TRUE)
grep("Литораль", gsub("\\, ст\\. (\\d)$", "\\-$1", df$point, ignore.case = TRUE))
df$point[grep("Литораль", gsub("\\, ст\\. (\\d)$", "\\-$1", df$point, ignore.case = TRUE))]
gsub("\\, ст\\. (\\d)$", "\\-$1", df$point, ignore.case = TRUE)[grep("Литораль", gsub("\\, ст\\. (\\d)$", "\\-$1", df$point, ignore.case = TRUE))]
gsub("\\, ст\\. (\\d)$", "\\-\\1", df$point, ignore.case = TRUE)[grep("Литораль", gsub("\\, ст\\. (\\d)$", "\\-\\1", df$point, ignore.case = TRUE))]
gsub("\\, ст\\. (\\d+)$", "\\-\\1", df$point, ignore.case = TRUE)[grep("Литораль", gsub("\\, ст\\. (\\d+)$", "\\-\\1", df$point, ignore.case = TRUE))]
df$point <- gsub("\\, ст\\. (\\d+)$", "\\-\\1", df$point, ignore.case = TRUE)
df$point
levels(df$point)
unique(df$point)
unique(gsub("^Лит_[а-я\\. ]*(\\d+)(.*)", "Литораль-\\1"))
unique(gsub("^Лит_[а-я\\. ]*(\\d+)(.*)", "Литораль-\\1", df$point))
unique(df$point)
df$point <- gsub("^Лит_[а-я\\. ]*(\\d+)(.*)", "Литораль-\\1", df$point)
unique(df$point)
df$point <- gsub("Литоарль", "Литораль", df$point, ignore.case = TRUE)
unique(df$point)
unique(gsub("0(\d)", "\\1", df$point))
unique(gsub("0(\\d)", "\\1", df$point))
df$point <- gsub("0(\\d)", "\\1", df$point)
unique(df$point)
unique(gsub("ст[\\.\\-](\d+)", "Станция-\\1", df$point, ignore.case = TRUE))
unique(gsub("ст[\\.\\-](\\d+)", "Станция-\\1", df$point, ignore.case = TRUE))
unique(gsub("^.*(\\d+)", "Станция-\\1", df$point))
unique(gsub("^.*(\\d+)$", "Станция-\\1", df$point))
unique(gsub("^[а-Я]+(\\d+)$", "Станция-\\1", df$point))
unique(gsub("^[а-яА-Я]+(\\d+)$", "Станция-\\1", df$point))
unique(gsub("^[а-я]+(\\d+)$", "Станция-\\1", df$point, ignore.case = TRUE))
unique(gsub("^[а-Я]+(\\d+)$", "Станция-\\1", df$point))
df$point <- gsub("ст[\\.\\-](\\d+)", "Станция-\\1", df$point, ignore.case = TRUE)
unique(gsub("^[а-Я]+(\\d+)$", "Станция-\\1", df$point))
unique(gsub("^[а-я]+(\\d+)$", "Станция-\\1", df$point, ignore.case = TRUE))
unique(df$point)
unique(gsub("^[а-яА-Я\\-]+(\\d+)$", "Станция-\\1", df$point, ignore.case = TRUE))
df$point <- gsub("Мядель-1", "Мядель", df$point, ignore.case = TRUE)
unique(df$point)
unique(gsub("^[а-яА-Я\\-]+(\\d+)$", "Станция-\\1", df$point, ignore.case = TRUE))
df$point <- gsub("^[а-яА-Я\\-]+(\\d+)$", "Станция-\\1", df$point, ignore.case = TRUE)
unique(df$point)
df$point <- gsub("мялель", "Мядель", df$point, ignore.case = TRUE)
unique(df$point)
df$point <- gsub("мядельская лука", "Мядельская-Лука", df$point, ignore.case = TRUE)
unique(df$point)
head(df)
plot(df$o2solubility, df$saturation)
plot(df$o2solubility, df$temperature)
plot(df$temperature, df$o2solubility)
plot(df$temperature, df$saturation)
library(ggplot2)
ggplot(df, aes(temperature, saturation, color=points)) + geom_point()
df$point <- as.factor(df$point)
ggplot(df, aes(temperature, saturation, color=points)) + geom_point()
test <- data.frame(df$point, df$temperature, df$saturation)
ggplot(test[complete.cases(test), ], aes(temperature, saturation, color=points)) + geom_point()
ggplot(test[complete.cases(test), ]) + geom_point()
ggplot(test[complete.cases(test), ]) + geom_point(aes(temperature, saturation, color=points))
test <- test[complete.cases(test), ]
test <- data.frame(point=df$point, temperature=df$temperature, saturation=df$saturation)
test <- test[complete.cases(test), ]
ggplot(test[complete.cases(test), ]) + geom_point(aes(temperature, saturation, color=points))
class(df$temperature)
class(df$saturation)
head(test)
ggplot(test[complete.cases(test), ]) + geom_point(aes(temperature, saturation))
test$point
ggplot(test[complete.cases(test), ]) + geom_point(aes(temperature, saturation, fill=point))
ggplot(test[complete.cases(test), ]) + geom_point(aes(temperature, saturation, col=point))
ggplot(df) + geom_point(aes(temperature, saturation, col=point))
ggplot(df[df$point == "Станция-1"]) + geom_point(aes(temperature, saturation, col=point))
ggplot(df[df$point == "Станция-1", ]) + geom_point(aes(temperature, saturation, col=point))
ggplot(df[df$point == "Станция-2", ]) + geom_point(aes(temperature, saturation, col=point))
ggplot(df[df$point == "Станция-4", ]) + geom_point(aes(temperature, saturation, col=point))
ggplot(df[df$point == "Станция-5", ]) + geom_point(aes(temperature, saturation, col=point))
ggplot(df) + geom_point(aes(date, temperature, col=point))
ggplot(df[df$point == 'Станция-1']) + geom_point(aes(date, temperature, col=point))
ggplot(df[df$point == 'Станция-1', ]) + geom_point(aes(date, temperature, col=point))
ggplot(df[df$point == 'Станция-2', ]) + geom_point(aes(date, temperature, col=point))
ggplot(df[df$point == 'Станция-3', ]) + geom_point(aes(date, temperature, col=point))
ggplot(df[df$point == 'Станция-4', ]) + geom_point(aes(date, temperature, col=point))
ggplot(df[df$point == 'Станция-5', ]) + geom_point(aes(date, temperature, col=point))
ggplot(df[df$point == 'Станция-6', ]) + geom_point(aes(date, temperature, col=point))
ggplot(df[df$point == 'Станция-7', ]) + geom_point(aes(date, temperature, col=point))
ggplot(df[df$point == 'Пелагиаль', ]) + geom_point(aes(date, temperature, col=point))
ggplot(df[df$point == 'Пелагиаль', ]) + geom_line(aes(date, temperature, col=point))
ggplot(df[df$point == 'Пелагиаль', ]) + geom_line(aes(date, temperature, col=depth))
ggplot(df[df$point == 'Пелагиаль', ]) + geom_point(aes(date, temperature, col=depth))
ggplot(df) + geom_point(aes(date, temperature, col=depth))
ggplot(df) + geom_point(aes(date, temperature, col=horizont))
ggplot(df) + geom_point(aes(o2solubility, saturation, col=horizont))
ggplot(df) + geom_point(aes(o2solubility, saturation, col=temperature))
ggplot(df) + geom_point(aes(temperature, saturation, col=o2solubility))
ggplot(df) + geom_point(aes(temperature, transparency, col=o2solubility))
df$date
months(df$date)
df$date[1]
df$date[1]$year
year(df$date[1])
install.packages('lubridate')
library(lubridate)
year(df$date)
df[year(df$date) == 2011]
df[year(df$date) == 2011, ]
ggplot(df[year(df$date) == 2011, ]) + geom_point(aes(date, temperature, col=horizont))
ggplot(df[year(df$date) == 2010, ]) + geom_point(aes(date, temperature, col=horizont))
df[year(df$date) == 2010, ]
length(df[year(df$date) == 2010, ])
row(df[year(df$date) == 2010, ])
rows(df[year(df$date) == 2010, ])
size(df[year(df$date) == 2010, ])
dim(df[year(df$date) == 2010, ])
dim(df[year(df$date) == 2010, ])[1]
dim(df[year(df$date) == 2009, ])[1]
dim(df[year(df$date) == 2008, ])[1]
dim(df[year(df$date) == 2007, ])[1]
dim(df[year(df$date) == 2006, ])[1]
dim(df[year(df$date) == 2005, ])[1]
ggplot(df[year(df$date) == 2006, ]) + geom_point(aes(date, temperature, col=horizont))
dim(df[year(df$date) == 2004\, ])[1]
dim(df[year(df$date) == 2004, ])[1]
dim(df[year(df$date) == 2003, ])[1]
dim(df[year(df$date) == 2002, ])[1]
dim(df[year(df$date) == 2001, ])[1]
ggplot(df[year(df$date) == 2001, ]) + geom_point(aes(date, temperature, col=horizont))
ggplot(df[year(df$date) == 1998, ]) + geom_point(aes(date, temperature, col=horizont))
ggplot(df[year(df$date) == 1996, ]) + geom_point(aes(date, temperature, col=horizont))
ggplot(df[year(df$date) == 1996, ]) + geom_point(aes(date, temperature, col=horizont)) + facet_grid(. ~ horizont)
ggplot(df[year(df$date) == 1996, ]) + geom_point(aes(date, temperature, col=horizont)) + facet_wrap(~ horizont, nrow = 2, ncol = 2) +
asd
ggplot(df[year(df$date) == 1996, ]) + geom_point(aes(date, temperature, col=horizont)) + facet_wrap(~ horizont, nrow = 2, ncol = 2)
ggplot(df[year(df$date) == 1996, ]) + geom_point(aes(date, temperature, col=horizont)) + facet_wrap(~ horizont, nrow = 2, ncol = 3)
ggplot(df[year(df$date) == 1996, ]) + geom_line(aes(date, temperature, col=horizont)) + facet_wrap(~ horizont, nrow = 2, ncol = 3)
ggplot(df[year(df$date) == 1996, ]) + geom_line(aes(date, temperature, col=depth)) + facet_wrap(~ horizont, nrow = 2, ncol = 3)
ggplot(df[year(df$date) == 2011, ]) + geom_line(aes(date, temperature, col=depth)) + facet_wrap(~ horizont, nrow = 2, ncol = 3)
ggplot(df[year(df$date) == 2010, ]) + geom_line(aes(date, temperature, col=depth)) + facet_wrap(~ horizont, nrow = 2, ncol = 3)
ggplot(df[year(df$date) == 2010, ]) + geom_line(aes(date, temperature, col=depth)) + facet_wrap(~ horizont, nrow = 3, ncol = 3)
