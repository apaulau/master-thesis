date('1974-07-01')
c(c(date('1974-07-01')), d$a)
c(1, c(1,2,3))
c('1974-07-01'), d$a)
c('1974-07-01', d$a)
data.frame('1974-07-01', d$a), col.names = c('date', as.character(d$V1)))
data.frame(c('1974-07-01', d$a), col.names = c('date', as.character(d$V1)))
d <- data.frame(c('1974-07-01', d$a))
d
d <- cbind(read.table(text = names(a)), a)
d
d <- rbind(date='1974-07-1', cbind(read.table(text = names(a)), a))
rbind(date='1974-07-1', cbind(read.table(text = names(a)), a))
t(rbind(date='1974-07-1', cbind(read.table(text = names(a)), a)))
data.frame(date="1974-07-01", a)
cbind(a, "1974-07-01")
rbind(a, "1974-07-01")
c("1974-07-01", a)
c(date="1974-07-01", a)
data.frame(c(date="1974-07-01", a))
data.frame(rbind(c(date="1974-07-01", a)))
rbind(c(date="1974-07-01", a))
data.frame(rbind(c(date="1974-07-01", a)))
data.frame(rbind(c(date="1974-07-01", colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1]))))
batorino.aggregated.1974.july <- data.frame(rbind(c(date = "1974-07-01", colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1]))))
rbind(dataset, batorino.aggregated.1974.july)
library(xlsx)
library(ggplot2)
library(lubridate)
df <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино_ред', endRow = 1300,
colIndex = 1:8, colClasses = c("Date", "character", rep("numeric", 6)))
colnames(df) <- c('date', 'point', 'depth', 'transparency', 'horizont', 'temperature', 'o2solubility', 'saturation')
# Cleaning data
df$point <- trimws(df$point)
## Transform: 'Литораль, ст.1' -> 'Литораль-1'
df$point <- gsub("\\, ст\\. (\\d+)$", "\\-\\1", df$point, ignore.case = TRUE)
## Transform: 'Лит_15_исток р.Дро' -> 'Литораль-15'
df$point <- gsub("^Лит_[а-я\\. ]*(\\d+)(.*)", "Литораль-\\1", df$point)
## Liquidate leading zero
df$point <- gsub("0(\\d)", "\\1", df$point)
## Transform: 'ст.6' -> 'Станция-6'
df$point <- gsub("ст[\\.\\-](\\d+)", "Станция-\\1", df$point, ignore.case = TRUE)
## Transform: Мядель
df$point <- gsub("Мядель-1", "Мядель", df$point, ignore.case = TRUE)
df$point <- gsub("мялель", "Мядель", df$point, ignore.case = TRUE)
df$point <- gsub("мядельская лука", "Мядельская-Лука", df$point, ignore.case = TRUE)
## Transform: 'Литораль-1', 'Пелагиаль-4' -> 'Станция-1', 'Станция-4'
df$point <- gsub("^[а-яА-Я\\-]+(\\d+)$", "Станция-\\1", df$point, ignore.case = TRUE)
df$point <- as.factor(df$point)
## Remove transparency variable as it has so few observations
df$transparency <- NULL
## Extract only data for horizont = 3
batorino.h3 <- df[df$horizont == 3, ]
## Because of data absence in period from start till 1972 extract the rest
batorino.h3 <- batorino.h3[year(batorino.h3$date) > 1972, ]
## As we extracted data with horizont=3 there's no need in this variable
batorino.h3$horizont <- NULL
## Also maybe there is no sense in point variable as it could the same sensor but with different name
batorino.h3$point <- NULL
## Rounding dates down to the nearest month for further aggregating (because we wanna study data by months)
batorino.h3$date <- floor_date(batorino.h3$date, "month")
batorino.aggregated <- aggregate(batorino.h3, by = list(group = batorino.h3$date), mean)
batorino.aggregated$group <- NULL
## Count nums of observation each month
obsByNums <- sapply(1:12, function(x) dim(batorino.aggregated[month(batorino.aggregated$date) == x, ])[1])
mostVoluminousMonth <- which.max(obsByNums)
dataset <- batorino.aggregated[month(batorino.aggregated$date) == mostVoluminousMonth, ]
## I found that there is gap between 73 and 75 years. So it seems we can have mean mean of neighborhood months for this year
batorino.aggregated.1974 <- batorino.aggregated[year(batorino.aggregated$date) == 1974, ]
batorino.aggregated.1974.july <- data.frame(rbind(c(date = "1974-07-01", colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1]))))
dataset
batorino.aggregated.1974.july
rbind(dataset, batorino.aggregated.1974.july)
dataset <- rbind(dataset, batorino.aggregated.1974.july)
dataset[order(dataset$date),]
dataset <- rbind(dataset, batorino.aggregated.1974.july)
dataset <- dataset[order(dataset$date),]
dataset
batorino.h3[is.na(batorino.h3$temperature)]
batorino.h3[is.na(batorino.h3$temperature),]
batorino.h3
batorino.h3[month(batorino.h3$date) == 6,]
batorino.aggregated[month(batorino.aggregated$date) == 6,]
dataset
batorino.aggregated[month(batorino.aggregated$date) == 7,]
dim(dataset)
ggplot(dataset) + geom_line(aes(date, temperature, col = o2solubility))
ggplot(dataset) + geom_line(aes(date, temperature))
dataset
ggplot(batorino.h3[month(batorino.h3$date) == 7, ]) + geom_line(aes(date, temperature, col = o2solubility))
dataset
batorino.h3[month(batorino.h3$date) == 7, ]
dataset
dataset <- batorino.aggregated[month(batorino.aggregated$date) == mostVoluminousMonth, ]
batorino.aggregated.1974 <- batorino.aggregated[year(batorino.aggregated$date) == 1974, ]
batorino.aggregated.1974.july <- data.frame(rbind(c(date = "1974-07-01", colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1]))))
dataset <- data.frame(rbind(dataset, batorino.aggregated.1974.july))
dataset <- dataset[order(dataset$date),]
dataset
dataset$temperature
dataset <- batorino.aggregated[month(batorino.aggregated$date) == mostVoluminousMonth, ]
dataset
dataset$temperature
data.frame(rbind(c(date = "1974-07-01", colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1]))))
data.frame( colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1]))
data.frame(rbind(colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1])))
data.frame(rbind(colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1])))$temperature
data.frame(rbind(colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1])))
d <- data.frame(rbind(colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1])))
d
d$date
d$date <- "1974-01-01"
d
dataset <- data.frame(rbind(dataset, d))
dataset
df <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино_ред', endRow = 1300,
colIndex = 1:8, colClasses = c("Date", "character", rep("numeric", 6)))
colnames(df) <- c('date', 'point', 'depth', 'transparency', 'horizont', 'temperature', 'o2solubility', 'saturation')
# Cleaning data
df$point <- trimws(df$point)
## Transform: 'Литораль, ст.1' -> 'Литораль-1'
df$point <- gsub("\\, ст\\. (\\d+)$", "\\-\\1", df$point, ignore.case = TRUE)
## Transform: 'Лит_15_исток р.Дро' -> 'Литораль-15'
df$point <- gsub("^Лит_[а-я\\. ]*(\\d+)(.*)", "Литораль-\\1", df$point)
## Liquidate leading zero
df$point <- gsub("0(\\d)", "\\1", df$point)
## Transform: 'ст.6' -> 'Станция-6'
df$point <- gsub("ст[\\.\\-](\\d+)", "Станция-\\1", df$point, ignore.case = TRUE)
## Transform: Мядель
df$point <- gsub("Мядель-1", "Мядель", df$point, ignore.case = TRUE)
df$point <- gsub("мялель", "Мядель", df$point, ignore.case = TRUE)
df$point <- gsub("мядельская лука", "Мядельская-Лука", df$point, ignore.case = TRUE)
## Transform: 'Литораль-1', 'Пелагиаль-4' -> 'Станция-1', 'Станция-4'
df$point <- gsub("^[а-яА-Я\\-]+(\\d+)$", "Станция-\\1", df$point, ignore.case = TRUE)
df$point <- as.factor(df$point)
## Remove transparency variable as it has so few observations
df$transparency <- NULL
## Extract only data for horizont = 3
batorino.h3 <- df[df$horizont == 3, ]
## Because of data absence in period from start till 1972 extract the rest
batorino.h3 <- batorino.h3[year(batorino.h3$date) > 1972, ]
## As we extracted data with horizont=3 there's no need in this variable
batorino.h3$horizont <- NULL
## Also maybe there is no sense in point variable as it could the same sensor but with different name
batorino.h3$point <- NULL
## Rounding dates down to the nearest month for further aggregating (because we wanna study data by months)
batorino.h3$date <- floor_date(batorino.h3$date, "month")
batorino.aggregated <- aggregate(batorino.h3, by = list(group = batorino.h3$date), mean)
batorino.aggregated$group <- NULL
## Count nums of observation each month
obsByNums <- sapply(1:12, function(x) dim(batorino.aggregated[month(batorino.aggregated$date) == x, ])[1])
mostVoluminousMonth <- which.max(obsByNums)
dataset <- batorino.aggregated[month(batorino.aggregated$date) == mostVoluminousMonth, ]
## I found that there is gap between 73 and 75 years. So it seems we can have mean mean of neighborhood months for this year
## Get observations in 1974
batorino.aggregated.1974 <- batorino.aggregated[year(batorino.aggregated$date) == 1974, ]
## Get mean between june and august
batorino.aggregated.1974.july <- data.frame(rbind(colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1])))
dataset
d
batorino.aggregated.1974.july
batorino.aggregated.1974.july$date <- date('1974-07-01')
batorino.aggregated.1974.july
dataset <- data.frame(rbind(dataset, batorino.aggregated.1974.july))
dataset
dataset <- dataset[order(dataset$date),]
dataset
rownames(dataset)
rownames(dataset) <- 1:dim(dataset)[1]
dataset
library(xlsx)
library(ggplot2)
library(lubridate)
df <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино_ред', endRow = 1300,
colIndex = 1:8, colClasses = c("Date", "character", rep("numeric", 6)))
colnames(df) <- c('date', 'point', 'depth', 'transparency', 'horizont', 'temperature', 'o2solubility', 'saturation')
# Cleaning data
df$point <- trimws(df$point)
## Transform: 'Литораль, ст.1' -> 'Литораль-1'
df$point <- gsub("\\, ст\\. (\\d+)$", "\\-\\1", df$point, ignore.case = TRUE)
## Transform: 'Лит_15_исток р.Дро' -> 'Литораль-15'
df$point <- gsub("^Лит_[а-я\\. ]*(\\d+)(.*)", "Литораль-\\1", df$point)
## Liquidate leading zero
df$point <- gsub("0(\\d)", "\\1", df$point)
## Transform: 'ст.6' -> 'Станция-6'
df$point <- gsub("ст[\\.\\-](\\d+)", "Станция-\\1", df$point, ignore.case = TRUE)
## Transform: Мядель
df$point <- gsub("Мядель-1", "Мядель", df$point, ignore.case = TRUE)
df$point <- gsub("мялель", "Мядель", df$point, ignore.case = TRUE)
df$point <- gsub("мядельская лука", "Мядельская-Лука", df$point, ignore.case = TRUE)
## Transform: 'Литораль-1', 'Пелагиаль-4' -> 'Станция-1', 'Станция-4'
df$point <- gsub("^[а-яА-Я\\-]+(\\d+)$", "Станция-\\1", df$point, ignore.case = TRUE)
df$point <- as.factor(df$point)
## Remove transparency variable as it has so few observations
df$transparency <- NULL
## Extract only data for horizont = 3
batorino.h3 <- df[df$horizont == 3, ]
## Because of data absence in period from start till 1972 extract the rest
batorino.h3 <- batorino.h3[year(batorino.h3$date) > 1972, ]
## As we extracted data with horizont=3 there's no need in this variable
batorino.h3$horizont <- NULL
## Also maybe there is no sense in point variable as it could the same sensor but with different name
batorino.h3$point <- NULL
## Rounding dates down to the nearest month for further aggregating (because we wanna study data by months)
batorino.h3$date <- floor_date(batorino.h3$date, "month")
batorino.aggregated <- aggregate(batorino.h3, by = list(group = batorino.h3$date), mean)
batorino.aggregated$group <- NULL
## Count nums of observation each month
obsByNums <- sapply(1:12, function(x) dim(batorino.aggregated[month(batorino.aggregated$date) == x, ])[1])
mostVoluminousMonth <- which.max(obsByNums)
dataset <- batorino.aggregated[month(batorino.aggregated$date) == mostVoluminousMonth, ]
## I found that there is gap between 73 and 75 years. So it seems we can have mean mean of neighborhood months for this year
## Get observations in 1974
batorino.aggregated.1974 <- batorino.aggregated[year(batorino.aggregated$date) == 1974, ]
## Get mean between june and august
batorino.aggregated.1974.july <- data.frame(rbind(colMeans(batorino.aggregated.1974[(month(batorino.aggregated.1974$date) == 06 | month(batorino.aggregated.1974$date) == 08), -1])))
batorino.aggregated.1974.july$date <- date('1974-07-01')
dataset
dataset <- data.frame(rbind(dataset, batorino.aggregated.1974.july))
dataset
dataset <- dataset[order(dataset$date),]
dataset
rownames(dataset) <- 1:dim(dataset)[1]
dataset
dataset
ggplot(dataset) + geom_line(aes(date, temperature))
ggplot(dataset) + geom_line(aes(date, temperature, col = o2solubility))
ggplot(dataset) + geom_line(aes(date, temperature, col = o2solubility))
ggplot(dataset) + geom_line(aes(date, temperature, col = saturation))
ggplot(dataset) + geom_line(aes(date, saturation, col = temperature))
ggplot(dataset) + geom_line(aes(date, o2solubility, col = temperature))
ggplot(dataset) + geom_line(aes(saturation, o2solubility, col = temperature))
ggplot(dataset) + geom_line(aes(temperature, o2solubility, col = temperature))
ggplot(dataset) + geom_line(aes(temperature, saturation, col = temperature))
ggplot(dataset) + geom_line(aes(temperature, saturation, col = o2solubility))
rm(list = ls(all.names = TRUE))
source('~/uni/master-thesis/R/getdata.R')
df
head(df)
cleanPointNames <- function(df) {
df$point <- trimws(df$point)
## Transform: 'Литораль, ст.1' -> 'Литораль-1'
df$point <- gsub("\\, ст\\. (\\d+)$", "\\-\\1", df$point, ignore.case = TRUE)
## Transform: 'Лит_15_исток р.Дро' -> 'Литораль-15'
df$point <- gsub("^Лит_[а-я\\. ]*(\\d+)(.*)", "Литораль-\\1", df$point)
## Liquidate leading zero
df$point <- gsub("0(\\d)", "\\1", df$point)
## Transform: 'ст.6' -> 'Станция-6'
df$point <- gsub("ст[\\.\\-](\\d+)", "Станция-\\1", df$point, ignore.case = TRUE)
## Transform: Мядель
df$point <- gsub("Мядель-1", "Мядель", df$point, ignore.case = TRUE)
df$point <- gsub("мялель", "Мядель", df$point, ignore.case = TRUE)
df$point <- gsub("мядельская лука", "Мядельская-Лука", df$point, ignore.case = TRUE)
## Transform: 'Литораль-1', 'Пелагиаль-4' -> 'Станция-1', 'Станция-4'
df$point <- gsub("^[а-яА-Я\\-]+(\\d+)$", "Станция-\\1", df$point, ignore.case = TRUE)
df$point <- as.factor(df$point)
return(df)
}
df <- read.xlsx2('data/ndb1955-2012.xls', sheetName = 'Баторино_ред', endRow = 1300,
colIndex = 1:8, colClasses = c("Date", "character", rep("numeric", 6)))
colnames(df) <- c('date', 'point', 'depth', 'transparency', 'horizont', 'temperature', 'o2solubility', 'saturation')
df <- cleanPointNames(df)
## Remove transparency variable as it has so few observations
df$transparency <- NULL
batorino.h3 <- df[df$horizont == 3, ]
batorino.h3$horizont <- NULL
batorino.h3$date <- floor_date(batorino.h3$date, "month")
batorino.aggregated <- aggregate(batorino.h3, by = list(group = batorino.h3$date), mean)
batorino.h3$point <- NULL
batorino.h3$date <- floor_date(batorino.h3$date, "month")
batorino.aggregated <- aggregate(batorino.h3, by = list(group = batorino.h3$date), mean)
batorino.aggregated$group <- NULL
batorino.aggregated
dim(batorino.aggregated[month(batorino.aggregated$date) == 06 ,])
dim(batorino.aggregated[month(batorino.aggregated$date) == 07 ,])
obsByNums <- sapply(1:12, function(x) dim(batorino.aggregated[month(batorino.aggregated$date) == x, ])[1])
mostVoluminousMonth <- which.max(obsByNums)
mostVoluminousMonth
dataset <- batorino.aggregated[month(batorino.aggregated$date) == mostVoluminousMonth, ]
dataset
batorino.aggregated[year(batorino.aggregated$date) < 1971, ]
unique(batorino.aggregated)
complete.cases(batorino.aggregated)
batorino.aggregated[, c(1,3)]
complete.cases(batorino.aggregated[, c(1,3)])
batorino.aggregated[complete.cases(batorino.aggregated[, c(1,3)]),]
obsByNums
batorino.aggregated[month(batorino.aggregated$date) == 1 & complete.cases(batorino.aggregated[, c(1,3)]), ]
batorino.aggregated[month(batorino.aggregated$date) == 1, ]
obsByMonth <- sapply(1:12, function(x) dim(batorino.aggregated[month(batorino.aggregated$date) == x & complete.cases(batorino.aggregated[, c(1,3)]), ])[1])
mostVoluminousMonth <- which.max(obsByMonth)
mostVoluminousMonth
obsByMonth
dataset <- batorino.aggregated[month(batorino.aggregated$date) == mostVoluminousMonth, ]
dataset
dataset <- batorino.aggregated[month(batorino.aggregated$date) == 7, ]
dataset
batorino.aggregated[month(batorino.aggregated$date) == 6, ]
batorino.aggregated[month(batorino.aggregated$date) == 6, 3]
batorino.aggregated[month(batorino.aggregated$date) == 8, 3] - batorino.aggregated[month(batorino.aggregated$date) == 6, 3]
mean(batorino.aggregated[month(batorino.aggregated$date) == 8, 3] - batorino.aggregated[month(batorino.aggregated$date) == 6, 3])
batorino.aggregated[year(batorino.aggregated$date) < 1971, ]
batorino.aggregated[year(batorino.aggregated$date) <= 1971, ]
batorino.h3 <- batorino.h3[year(batorino.h3$date) > 1972, ]
batorino.h3$horizont <- NULL
batorino.h3$point <- NULL
batorino.h3$date <- floor_date(batorino.h3$date, "month")
batorino.aggregated <- aggregate(batorino.h3, by = list(group = batorino.h3$date), mean)
batorino.aggregated$group <- NULL
## Count nums of observation each month
obsByMonth <- sapply(1:12, function(x) dim(batorino.aggregated[month(batorino.aggregated$date) == x & complete.cases(batorino.aggregated[, c(1,3)]), ])[1])
mostVoluminousMonth <- which.max(obsByMonth)
mostVoluminousMonth
dataset <- batorino.aggregated[month(batorino.aggregated$date) == mostVoluminousMonth, ]
obsByMonth
paste0(1974, "-07-01")
getMostVoluminousMonth <- function(df) {
observationsByMonth <- sapply(1:12, function(x) dim(df[month(df$date) == x, ])[1])
return(which.max(observationsByMonth))
}
mostVoluminousMonth <- getMostVoluminousMonth(batorino.aggregated)
dataset <- batorino.aggregated[month(batorino.aggregated$date) == mostVoluminousMonth, ]
## I found that there is gap between 73 and 75 years. So it seems we can have mean mean of neighborhood months for this year
getApproximateJulyRow <- function(df, year) {
## Get observations in provided year
tmp <- df[year(df$date) == year, ]
## Get mean between june and august
july <- data.frame(rbind(colMeans(tmp[(month(tmp$date) == 06 | month(tmp$date) == 08), -1])))
july$date <- date(paste0(year, '-07-01'))
return(july)
}
approximateJuly1974 <- getApproximateJulyRow(batorino.aggregated, 1974)
approximateJuly1974
source("R/getdata.R")
src  <- read()
src
source("R/getdata.R")
src  <- read()
src
source("R/getdata.R")
src  <- read()
View(src)
filename <- 'data/ndb1955-2012.xls'
df <- read.xlsx2(filename, sheetName = 'Баторино_ред', endRow = 1300, colIndex = 1:8, colClasses = c("Date", "character", rep("numeric", 6)))
colnames(df) <- c('date', 'point', 'depth', 'transparency', 'horizont', 'temperature', 'o2solubility', 'saturation')
df$point <- trimws(df$point)
## Transform: 'Литораль, ст.1' -> 'Литораль-1'
df$point <- gsub("\\, ст\\. (\\d+)$", "\\-\\1", df$point, ignore.case = TRUE)
## Transform: 'Лит_15_исток р.Дро' -> 'Литораль-15'
df$point <- gsub("^Лит_[а-я\\. ]*(\\d+)(.*)", "Литораль-\\1", df$point)
## Liquidate leading zero
df$point <- gsub("0(\\d)", "\\1", df$point)
## Transform: 'ст.6' -> 'Станция-6'
df$point <- gsub("ст[\\.\\-](\\d+)", "Станция-\\1", df$point, ignore.case = TRUE)
## Transform: Мядель
df$point <- gsub("Мядель-1", "Мядель", df$point, ignore.case = TRUE)
df$point <- gsub("мялель", "Мядель", df$point, ignore.case = TRUE)
df$point <- gsub("мядельская лука", "Мядельская-Лука", df$point, ignore.case = TRUE)
## Transform: 'Литораль-1', 'Пелагиаль-4' -> 'Станция-1', 'Станция-4'
df$point <- gsub("^[а-яА-Я\\-]+(\\d+)$", "Станция-\\1", df$point, ignore.case = TRUE)
df$point <- as.factor(df$point)
source("R/getdata.R")
src  <- read()
src
rownames(dataset) <- 1:dim(dataset)[1]
source("R/getdata.R")
src  <- read()
src
kObservationNum <- length(src[, 1]) - 6
WriteCharacteristic(expression = kObservationNum, type = "original", name = "n")
rm(list = ls(all.names = TRUE))
library(ggplot2)  # eye-candy graphs
library(xtable)   # convert data to latex tables
library(outliers) # tests for outliers
library(tseries)  # adf test used
library(nortest)  # tests for normality
library(sp)       # spatial data
library(gstat)    # geostatistics
library(reshape2) # will see
install.packages('outliers,tseries')
install.packages('outliers')
install.packages('tseries','nortest')
install.packages('tseries')
install.packages('nortest')
install.packages('sp')
install.packages('gtest')
install.packages('gstat')
install.packages('reshape2')
source("R/getdata.R")
source("R/lib/plot.R")       # useful functions for more comfortable plotting
source("R/lib/dstats.R")     # descriptive statistics module
source("R/lib/misc.R")       # some useful global-use functions
source("R/lib/draw.R")       # helpers for drawing
source("R/lib/write.R")      # helpers for writing
source("R/lib/ntest.R")      # tests for normality
source("R/lib/regr.R")
source("R/lib/measures.R")
src  <- read()
kObservationNum <- length(src[, 1]) - 6
WriteCharacteristic(expression = kObservationNum, type = "original", name = "n")
## Source data as basic time series plot: points connected with line
plot.source <- DrawDataRepresentation(data = src, filename = "source.png", datebreaks = kDateBreaks)
source("R/lib/plot.R")       # useful functions for more comfortable plotting
plot.source <- DrawDataRepresentation(data = src, filename = "source.png")
source("R/lib/plot.R")       # useful functions for more comfortable plotting
source("R/lib/draw.R")       # helpers for drawing
plot.source <- DrawDataRepresentation(data = src, filename = "source.png")
source("R/lib/draw.R")       # helpers for drawing
plot.source <- DrawDataRepresentation(data = src, filename = "source.png")
plot.source <- DrawDataRepresentation(data = src)
source("R/lib/draw.R")       # helpers for drawing
year(src$date)
source("R/getdata.R")
src  <- read()
src
kDateBreaks <- seq(min(src$year) - 5, max(src$year) + 5, by = 2) # date points for graphs
kObservationNum <- length(src[, 1]) - 6
WriteCharacteristic(expression = kObservationNum, type = "original", name = "n")
plot.source <- DrawDataRepresentation(data = src, filename = "source.png", datebreaks = kDateBreaks)
plot.source
tmp <- src
colnames(tmp) <- c("Год", "Температура, ºС", "Растворимость кислорода, мг/л", 'Насыщенность, %')
print(
xtable(tmp, caption = "Исходные данные.", label = "table:source", digits = c(0, 0, 2), align = "r|rc|"),
table.placement = "H", caption.placement = 'top', file = "out/original/data.tex", include.rownames = FALSE)
src
source("R/getdata.R")
tmp <- src
colnames(tmp) <- c("Год", "Температура, ºС", "Растворимость кислорода, мг/л", 'Насыщенность, %')
print(
xtable(tmp, caption = "Исходные данные.", label = "table:source", digits = c(0, 0, 2, 2, 2), align = "r|rc|"),
table.placement = "H", caption.placement = 'top', file = "out/original/data.tex", include.rownames = FALSE
)
print(
xtable(tmp, caption = "Исходные данные.", label = "table:source", digits = c(0, 0, 2, 2, 2), align = "r|rccc|"),
table.placement = "H", caption.placement = 'top', file = "out/original/data.tex", include.rownames = FALSE
)
colnames(tmp) <- c("Год", "Температура, ºС", "Растворимость кислорода, мг/л", 'Насыщенность, %')
print(
xtable(tmp, caption = "Исходные данные.", label = "table:source", digits = c(0, 0, 2, 2, 2), align = "r|rcccc|"),
table.placement = "H", caption.placement = 'top', file = "out/original/data.tex", include.rownames = FALSE
)
src
src  <- read()
colnames(tmp) <- c("Год", "Температура, ºС", "Растворимость кислорода, мг/л", 'Насыщенность, %')
print(
xtable(tmp, caption = "Исходные данные.", label = "table:source", digits = c(0, 0, 2, 2, 2), align = "r|rccc|"),
table.placement = "H", caption.placement = 'top', file = "out/original/data.tex", include.rownames = FALSE
)
print(
xtable(tmp, caption = "Исходные данные.", label = "table:source", digits = c(0, 0, 2, 2, 2), align = "r|rcccc|"),
table.placement = "H", caption.placement = 'top', file = "out/original/data.tex", include.rownames = FALSE
)
src
tmp <- src
colnames(tmp) <- c("Год", "Температура, ºС", "Растворимость кислорода, мг/л", 'Насыщенность, %')
print(
xtable(tmp, caption = "Исходные данные.", label = "table:source", digits = c(0, 0, 2, 2, 2), align = "r|rccc|"),
table.placement = "H", caption.placement = 'top', file = "out/original/data.tex", include.rownames = FALSE
)
## Form the data for research
sample <- src[0:kObservationNum,]
sample.dstats <- dstats.describe(sample$temperature, type = "original", locale = TRUE)
sample.dstats
dstats.describe(sample$o2solubility, type = "original", locale = TRUE)
dstats.describe(sample$saturation, type = "original", locale = TRUE)
WriteCharacteristic(expression = nclass.Sturges(sample$temperature), type = "original", name = "sturges")
plot.data.hist <- DrawHistogram(data = sample, filename = "original/histogram.png")
source("R/lib/draw.R")       # helpers for drawing
plot.data.hist <- DrawHistogram(data = sample, filename = "original/histogram.png")
plot.data.hist
plot.data.qq <- DrawQuantileQuantile(data = sample$temperature, filename = "original/quantile.png")
plot.data.qq
DrawQuantileQuantile(data = sample$o2solubility)
DrawQuantileQuantile(data = sample$saturation)
DrawScatterPlot(sample, filename = "original/scatterplot.png", kDateBreaks)
cor(x = sample$year, y = sample$temperature)
sample.fit <- lm(sample$temperature ~ c(1:kObservationNum))
linear <- function(x, a, b) a * x + b
pr.trend <-
sapply(
X = ConvertYearsToNum(src$year[(kObservationNum + 1):nrows]), FUN = linear,
a = sample.fit$coefficients[[2]], b = sample.fit$coefficients[[1]]
)
nrows <- length(src[, 1])
pr.trend <-
sapply(
X = ConvertYearsToNum(src$year[(kObservationNum + 1):nrows]), FUN = linear,
a = sample.fit$coefficients[[2]], b = sample.fit$coefficients[[1]]
)
sample.residuals.prediction.trend <-
data.frame(
"Год" = src$year[(kObservationNum + 1):nrows],
"Актуальное" = src$temperature[(kObservationNum + 1):nrows],
"Прогнозное" = pr.trend,
"Ошибка" = src$temperature[(kObservationNum + 1):nrows] - pr.trend
)
pr.mse <- MSE(src$temperature[(kObservationNum + 1):nrows] - pr.trend)
colnames(sample.residuals.prediction.trend) <- c("", "$X(t)$", "$y(t)$", "$ X(t) - y(t) $")
print(
xtable(
sample.residuals.prediction.trend, caption = "Сравнение прогнозных значений (модель $ y(t) $)",
label = "table:prediction_trend", digits = c(0, 0, 3, 3, 3), align = "rr|ccc"
),
caption.placement = 'top', file = "out/residual/prediction-trend.tex",
sanitize.text.function = function(x) {
x
}, include.rownames = FALSE
)
## Time series (which is by default is research data) with trend line based on linear module estimate (lm)
plot.data.ts <- DrawTimeSeries(data = sample, filename = "original/time-series.png", datebreaks = kDateBreaks)
plot.data.ts
