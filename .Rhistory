variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=FALSE,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
models.comparison <- CompareClassicalModels(variogram.manual, variogram.classical, filename="figures/variogram/models-comparison.png")
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
kriging.classical <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.classical$var_model)
kriging.robust    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.robust$var_model)
prediction.manual <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.manual$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.manual, caption="Прогноз (сферическая модель)", label="table:prediction-manual", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-manual.tex")
prediction.classical <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.classical$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.classical, caption="Прогноз (классическая оценка)", label="table:prediction-classical", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-classical.tex")
prediction.robust <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.robust$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.robust, caption="Прогноз (робастная оценка)", label="table:prediction-robust", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-robust.tex")
res.manual <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.manual,    "figures/variogram/cross-prediction-manual.png")
res.classical <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.classical, "figures/variogram/cross-prediction-classical.png")
res.robust <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust,    "figures/variogram/cross-prediction-robust.png")
mse.manual    <- MSE(res.manual)
mse.classical <- MSE(res.classical)
mse.robust    <- MSE(res.robust)
WriteCharacteristic(mse.manual, type="variogram", name="manual-mse")
WriteCharacteristic(mse.classical, type="variogram", name="classical-mse")
WriteCharacteristic(mse.robust, type="variogram", name="robust-mse")
# Find best cutoff parameter
ComparePredictionParameters(research.data.residuals, research.data.trend, ConvertYearsToNum(research.data$year), filename="figures/variogram/parameter-comparison.png")
# Best prediction as we investigated is for robust kriging with cutoff=6. Let's make it!
variogram.robust.best <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=6, width=FALSE,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
kriging.robust.best <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.robust.best$var_model)
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
mse.robust.best <- MSE(res.robust.best)
prediction.robust.best <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.robust.best$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.robust.best, caption="Наилучший прогноз (робастная оценка)", label="table:prediction-robust-best", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-robust-best.tex")
WriteCharacteristic(mse.robust.best, type="variogram", name="robust-best-mse")
## TODO: form krige matrix for analysis
variogram.manual
variogram.manual$var_model
variogram.manual$var_model[psill]
variogram.manual$var_model["psill"]
variogram.manual$var_model[[2]]
variogram.manual$var_model[[2]][1]
variogram.manual$var_model[[3]][2]
WriteCharacteristic(variogram.manual$var_model[[2]][1], type="variogram", name="nug-psill")
WriteCharacteristic(variogram.manual$var_model[[2]][2], type="variogram", name="sph-psill")
WriteCharacteristic(variogram.manual$var_model[[3]][2], type="variogram", name="sph-range")
WriteCharacteristic(variogram.manual$var_model[[2]][1], type="variogram", name="sph-nug-psill")
WriteCharacteristic(variogram.classical$var_model[[2]][1], type="variogram", name="classical-nug-psill")
WriteCharacteristic(variogram.classical$var_model[[2]][2], type="variogram", name="classical-psill")
WriteCharacteristic(variogram.classical$var_model[[3]][2], type="variogram", name="classcial-range")
WriteCharacteristic(variogram.robust$var_model[[2]][1], type="variogram", name="robust-nug")
WriteCharacteristic(variogram.robust$var_model[[2]][2], type="variogram", name="robust-psill")
WriteCharacteristic(variogram.robust$var_model[[3]][2], type="variogram", name="robust-range")
WriteCharacteristic(variogram.classical$var_model[[3]][2], type="variogram", name="classical-range")
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, linetype="dashed") +
geom_line(data=prediction.trend, aes(x=year, y=temperature, linetype="dotdash") +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, linetype="dashed")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, linetype="dotdash")) +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, color="Прогноз Кригинг"), linetype="dashed") +
geom_line(data=prediction.trend, aes(x=year, y=temperature, color="Прогноз Тренд"), linetype="dotdash") +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, color="Прогноз Кригинг", linetype="dashed")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, color="Прогноз Тренд", linetype="dotdash")) +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
## Compares predictions based on trend and kriging with actual values
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, color="Прогноз Кригинг", linetype="Прогноз Кригинг")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, color="Прогноз Тренд", linetype="Прогноз Тренд")) +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_linetype_manual(name="Lines", values=c("Прогноз Кригинг"="dashed")) +
scale_linetype_manual(name="Lines", values=c("Прогноз Тренд"="dotdash")) +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, color="Прогноз Кригинг", linetype="Прогноз Кригинг")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, color="Прогноз Тренд", linetype="Прогноз Тренд")) +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_linetype_manual(name="Lines", values=c("Прогноз Кригинг"="dashed", "Прогноз Тренд"="dotdash")) +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
## Compares predictions based on trend and kriging with actual values
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, linetype="Прогноз Кригинг")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, linetype="Прогноз Тренд")) +
geom_line(data=actual, aes(x=year, y=temperature, colour="Актуальное")) +
labs(color="") +
scale_linetype_manual(name="Lines", values=c("Прогноз Кригинг"="dashed", "Прогноз Тренд"="dotdash")) +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
CrossPrediction <- function (temperature, years, trend, kriging, file_prediction="", future=0) {
prediction.trend <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows]),
"year"=GetPredictionYears(years, src.nrows, future))
prediction.kriging <- data.frame("temperature"=c(temperature[(kObservationNum - 1):kObservationNum], trend[(kObservationNum + 1):src.nrows] + kriging$var1.pred),
"year"=GetPredictionYears(years, src.nrows, future))
actual <- data.frame("temperature"=temperature[(kObservationNum - 1):src.nrows],
"year"=GetPredictionYears(years, src.nrows, 0))
if (nchar(file_prediction)) {
plot.crossprediction <- ggplot() +
geom_line(data=prediction.kriging, aes(x=year, y=temperature, linetype="Прогноз Кригинг")) +
geom_line(data=prediction.trend, aes(x=year, y=temperature, linetype="Прогноз Тренд")) +
geom_line(data=actual, aes(x=year, y=temperature, linetype="Актуальное")) +
labs(color="") +
scale_linetype_manual(name="Lines", values=c("Прогноз Кригинг"="dashed", "Прогноз Тренд"="dotdash", "Актуальное"="solid")) +
scale_x_continuous(breaks=seq(min(actual$year), max(actual$year) + 5 + future, by=1)) + xlab("Год наблюдения") +
scale_y_continuous(breaks=seq(16, 28, .5)) + ylab("Температура, С") +
theme(axis.text.x = element_text(angle=45, hjust=1)) +
labs(color="")
ggsave(plot=plot.crossprediction, file=file_prediction, width=7, height=4)
}
prediction.kriging$temperature[3:(src.nrows-kObservationNum)] - actual$temperature[3:(src.nrows - kObservationNum)] ## what the heck? why 3?
}
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
qt(0.05, 35)
qt(0.95, 35)
qt(0.05, №)
qt(0.05, 1)
qt(0.95, 1)
y_ <- 1
n
c(1,2,3)[2]
qt(0.05, df=1,lower.tail = F)
qt(0.05, df=1,lower.tail = T)
qt(0.05, df=1,lower.tail = F)
qf(1-0.05, 1, 35)
regression <- function(x, a, b) a * x + b
FisherCriticalPoint <- function(alpha, df1, df2) {
qf(1 - alpha, df1, df2)
}
reqr.adequacy <- function(y, alpha=.05) {
regression <- function(x, a, b) a * x + b
FisherTest <- function() {
CriticalPoint <- function(alpha, df1, df2) {
qf(1 - alpha, df1, df2)
}
MakeConclusion <- function(statistic, critical) {
if (statistic > critical) {
conclusion <- "нулевая гипотеза о равенстве дисперсий отвергается, что означает в рассматриваемом случае адекватность регрессионной модели"
} else {
conclusion <- "нельзя отвергнуть нулевую гипотезу о равенстве дисперсий"
}
conclusion
}
resvar <- 1 / n * sum(sapply(x, FUN=function(j){(y[j] - y_[j])^2}))
statistic <- (n - 2) * var_ / resvar
critical <- CriticalPoint(alpha, 1, n - 2)
list <- (statistic=statistic, critical=critical resvar=resvar, conclusion=MakeConclusion(statistic, critical))
}
n <- length(y)
x <- seq(1, n)
fit <- lm(y ~ x)
a <- fit$coefficients[[2]]
b <- fit$coefficients[[1]]
y_ <- sapply(X=x, FUN=regression, a=a, b=b)
var_ <- 1 / n * sum(sapply(x, FUN=function(j){(y_[j] - mean(y))^2}))
determination <- var_ / var(y)
linearity <- determination - cor(y, x)^2
list(modvar=var_, determination=determination, linearity=linearity, Fisher=FisherTest())
}
reqr.adequacy <- function(y, alpha=.05) {
regression <- function(x, a, b) a * x + b
n <- length(y)
x <- seq(1, n)
fit <- lm(y ~ x)
a <- fit$coefficients[[2]]
b <- fit$coefficients[[1]]
y_ <- sapply(X=x, FUN=regression, a=a, b=b)
var_ <- 1 / n * sum(sapply(x, FUN=function(j){(y_[j] - mean(y))^2}))
determination <- var_ / var(y)
linearity <- determination - cor(y, x)^2
FisherTest <- function() {
CriticalPoint <- function(alpha, df1, df2) {
qf(1 - alpha, df1, df2)
}
MakeConclusion <- function(statistic, critical) {
if (statistic > critical) {
conclusion <- "нулевая гипотеза о равенстве дисперсий отвергается, что означает в рассматриваемом случае адекватность регрессионной модели"
} else {
conclusion <- "нельзя отвергнуть нулевую гипотезу о равенстве дисперсий"
}
conclusion
}
resvar <- 1 / n * sum(sapply(x, FUN=function(j){(y[j] - y_[j])^2}))
statistic <- (n - 2) * var_ / resvar
critical <- CriticalPoint(alpha, 1, n - 2)
list <- (statistic=statistic, critical=critical resvar=resvar, conclusion=MakeConclusion(statistic, critical))
}
list(modvar=var_, determination=determination, linearity=linearity, Fisher=FisherTest())
}
reqr.adequacy <- function(y, alpha=.05) {
regression <- function(x, a, b) a * x + b
CriticalPoint <- function(alpha, df1, df2) {
qf(1 - alpha, df1, df2)
}
MakeConclusion <- function(statistic, critical) {
if (statistic > critical) {
conclusion <- "нулевая гипотеза о равенстве дисперсий отвергается, что означает в рассматриваемом случае адекватность регрессионной модели"
} else {
conclusion <- "нельзя отвергнуть нулевую гипотезу о равенстве дисперсий"
}
conclusion
}
n <- length(y)
x <- seq(1, n)
fit <- lm(y ~ x)
a <- fit$coefficients[[2]]
b <- fit$coefficients[[1]]
y_ <- sapply(X=x, FUN=regression, a=a, b=b)
var_ <- 1 / n * sum(sapply(x, FUN=function(j){(y_[j] - mean(y))^2}))
determination <- var_ / var(y)
linearity <- determination - cor(y, x)^2
resvar <- 1 / n * sum(sapply(x, FUN=function(j){(y[j] - y_[j])^2}))
statistic <- (n - 2) * var_ / resvar
critical <- CriticalPoint(alpha, 1, n - 2)
list(modvar=var_, determination=determination, linearity=linearity,
Fisher=list(statistic=statistic, critical=critical resvar=resvar, conclusion=MakeConclusion(statistic, critical))
}
reqr.adequacy <- function(y, alpha=.05) {
regression <- function(x, a, b) a * x + b
CriticalPoint <- function(alpha, df1, df2) {
qf(1 - alpha, df1, df2)
}
MakeConclusion <- function(statistic, critical) {
if (statistic > critical) {
conclusion <- "нулевая гипотеза о равенстве дисперсий отвергается, что означает в рассматриваемом случае адекватность регрессионной модели"
} else {
conclusion <- "нельзя отвергнуть нулевую гипотезу о равенстве дисперсий"
}
conclusion
}
n <- length(y)
x <- seq(1, n)
fit <- lm(y ~ x)
a <- fit$coefficients[[2]]
b <- fit$coefficients[[1]]
y_ <- sapply(X=x, FUN=regression, a=a, b=b)
var_ <- 1 / n * sum(sapply(x, FUN=function(j){(y_[j] - mean(y))^2}))
determination <- var_ / var(y)
linearity <- determination - cor(y, x)^2
resvar <- 1 / n * sum(sapply(x, FUN=function(j){(y[j] - y_[j])^2}))
statistic <- (n - 2) * var_ / resvar
critical <- CriticalPoint(alpha, 1, n - 2)
list(modvar=1, determination=determination, linearity=linearity,
Fisher=list(statistic=statistic, critical=critical resvar=resvar, conclusion=MakeConclusion(statistic, critical))
}
regression <- function(x, a, b) a * x + b
CriticalPoint <- function(alpha, df1, df2) {
qf(1 - alpha, df1, df2)
}
MakeConclusion <- function(statistic, critical) {
if (statistic > critical) {
conclusion <- "нулевая гипотеза о равенстве дисперсий отвергается, что означает в рассматриваемом случае адекватность регрессионной модели"
} else {
conclusion <- "нельзя отвергнуть нулевую гипотезу о равенстве дисперсий"
}
conclusion
}
reqr.adequacy <- function(y, alpha=.05) {
regression <- function(x, a, b) a * x + b
CriticalPoint <- function(alpha, df1, df2) {
qf(1 - alpha, df1, df2)
}
MakeConclusion <- function(statistic, critical) {
if (statistic > critical) {
conclusion <- "нулевая гипотеза о равенстве дисперсий отвергается, что означает в рассматриваемом случае адекватность регрессионной модели"
} else {
conclusion <- "нельзя отвергнуть нулевую гипотезу о равенстве дисперсий"
}
conclusion
}
n <- length(y)
x <- seq(1, n)
fit <- lm(y ~ x)
a <- fit$coefficients[[2]]
b <- fit$coefficients[[1]]
y_ <- sapply(X=x, FUN=regression, a=a, b=b)
var_ <- 1 / n * sum(sapply(x, FUN=function(j){(y_[j] - mean(y))^2}))
determination <- var_ / var(y)
linearity <- determination - cor(y, x)^2
resvar <- 1 / n * sum(sapply(x, FUN=function(j){(y[j] - y_[j])^2}))
statistic <- (n - 2) * var_ / resvar
critical <- CriticalPoint(alpha, 1, n - 2)
list(modvar=var_, determination=determination, linearity=linearity,
Fisher=list(statistic=statistic, critical=critical resvar=resvar, conclusion=MakeConclusion(statistic, critical)))
}
reqr.adequacy <- function(y, alpha=.05) {
regression <- function(x, a, b) a * x + b
CriticalPoint <- function(alpha, df1, df2) {
qf(1 - alpha, df1, df2)
}
MakeConclusion <- function(statistic, critical) {
if (statistic > critical) {
conclusion <- "нулевая гипотеза о равенстве дисперсий отвергается, что означает в рассматриваемом случае адекватность регрессионной модели"
} else {
conclusion <- "нельзя отвергнуть нулевую гипотезу о равенстве дисперсий"
}
conclusion
}
n <- length(y)
x <- seq(1, n)
fit <- lm(y ~ x)
a <- fit$coefficients[[2]]
b <- fit$coefficients[[1]]
y_ <- sapply(X=x, FUN=regression, a=a, b=b)
var_ <- 1 / n * sum(sapply(x, FUN=function(j){(y_[j] - mean(y))^2}))
determination <- var_ / var(y)
linearity <- determination - cor(y, x)^2
resvar <- 1 / n * sum(sapply(x, FUN=function(j){(y[j] - y_[j])^2}))
statistic <- (n - 2) * var_ / resvar
critical <- CriticalPoint(alpha, 1, n - 2)
list(modvar=var_, determination=determination, linearity=linearity,
Fisher=list(statistic=statistic, critical=critical, resvar=resvar, conclusion=MakeConclusion(statistic, critical)))
}
regr.adequacy(research.data$temperature)
reqr.adequacy(research.data$temperature)
runUrl("https://github.com/ramnathv/shinySlidify/archive/gh-pages.zip")
runGist("https://github.com/ramnathv/shinySlidify/archive/gh-pages.zip")
library("shiny", lib.loc="~/study/bachelors-thesis/packrat/lib/x86_64-apple-darwin13.4.0/3.1.2")
runUrl("https://github.com/ramnathv/shinySlidify/archive/gh-pages.zip")
install.packages("googleVis")
runUrl("https://github.com/ramnathv/shinySlidify/archive/gh-pages.zip")
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
ыксювфеф
src.data
colnames(src.data) <- c("Год наблюдения", "Температура")
src.data
shiny::runApp('R/shiny')
src.data[1:38,]
colnames(src.data[1:38,]) <- c('1', '2')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
source("lib/regr.R")       # regression tests
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
