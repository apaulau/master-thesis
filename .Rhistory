mean(out$zscore^2)
mean(out$residual^2)
mean(out$residual)
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
library(automap)
install.packages(c("devtools", "evaluate", "formatR", "geoR", "highr", "jsonlite", "knitr", "manipulate", "markdown", "multicool", "plyr", "Rcpp", "RCurl", "roxygen2", "sp", "spacetime", "stringr"))
install.packages(c("boot", "evaluate", "formatR", "highr", "knitr", "manipulate", "markdown", "plyr", "Rcpp", "sp", "spacetime", "stringr"), lib="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
obj <- krige.cv(d~1, df, variogram.robust.best$var_model, nfold=32)
library(ggvis)
library(dplyr)
library(tseries)
library(sp)
library(gstat)
library(reshape2)
obj <- krige.cv(d~1, df, variogram.robust.best$var_model, nfold=32)
out = list()
# mean error, ideally 0:
out$mean_error = mean(obj$residual)
# mean error divided by the mean of the observed values, measure for how large the mean_error is in contrast to the mean of the dataset
out$me_mean = out$mean_error / mean(obj$observed)
# mean absolute error, ideally 0, less vulnerable to outliers
out$MAE = mean(abs(obj$residual))
# MSE, ideally small
out$MSE = mean(obj$residual^2)
# Mean square normalized error, ideally close to 1
out$MSNE = mean(obj$zscore^2)
# correlation observed and predicted, ideally 1
out$cor_obspred = cor(obj$observed, obj$observed - obj$residual)
# correlation predicted and residual, ideally 0
out$cor_predres = cor(obj$observed - obj$residual, obj$residual)
# RMSE, ideally small
out$RMSE = sqrt(sum(obj$residual^2) / length(obj$residual))
# RMSE / sd(observed), measure for how much the residuals vary to the total variation in the dataset
out$RMSE_sd = out$RMSE / sd(obj$observed)
# URMSE, ideally zero
out$URMSE = sqrt((sum(obj$residual^2) / length(obj$residual)) - mean(obj$residual)^2)
# Inter quartile range, ideally small
out$iqr = IQR(obj$residual)
out = lapply(out, signif, digits = digits)
out = lapply(out, signif, digits = 4)
out = t(t(out))
out
computeCVStatistics <- function(cv, digits=4){
out = list()
# mean error, ideally 0:
out$mean_error = mean(cv$residual)
# mean error divided by the mean of the observed values, measure for how large the mean_error is in contrast to the mean of the dataset
out$me_mean = out$mean_error / mean(cv$observed)
# mean absolute error, ideally 0, less vulnerable to outliers
out$MAE = mean(abs(cv$residual))
# MSE, ideally small
out$MSE = mean(cv$residual^2)
# Mean square normalized error, ideally close to 1
out$MSNE = mean(cv$zscore^2)
# correlation observed and predicted, ideally 1
out$cor_obspred = cor(cv$observed, cv$observed - cv$residual)
# correlation predicted and residual, ideally 0
out$cor_predres = cor(cv$observed - cv$residual, cv$residual)
# RMSE, ideally small
out$RMSE = sqrt(sum(cv$residual^2) / length(cv$residual))
# RMSE / sd(observed), measure for how much the residuals vary to the total variation in the dataset
out$RMSE_sd = out$RMSE / sd(cv$observed)
# URMSE, ideally zero
out$URMSE = sqrt((sum(cv$residual^2) / length(cv$residual)) - mean(cv$residual)^2)
# Inter quartile range, ideally small
out$iqr = IQR(cv$residual)
out = lapply(out, signif, digits = 4)
out = t(t(out))
return(out)
}
computeCVStatistics <- function(cv, digits=4){
out = list()
# mean error, ideally 0:
out$mean_error = mean(cv$residual)
# mean error divided by the mean of the observed values, measure for how large the mean_error is in contrast to the mean of the dataset
out$me_mean = out$mean_error / mean(cv$observed)
# mean absolute error, ideally 0, less vulnerable to outliers
out$MAE = mean(abs(cv$residual))
# MSE, ideally small
out$MSE = mean(cv$residual^2)
# Mean square normalized error, ideally close to 1
out$MSNE = mean(cv$zscore^2)
# correlation observed and predicted, ideally 1
out$cor_obspred = cor(cv$observed, cv$observed - cv$residual)
# correlation predicted and residual, ideally 0
out$cor_predres = cor(cv$observed - cv$residual, cv$residual)
# RMSE, ideally small
out$RMSE = sqrt(sum(cv$residual^2) / length(cv$residual))
# RMSE / sd(observed), measure for how much the residuals vary to the total variation in the dataset
out$RMSE_sd = out$RMSE / sd(cv$observed)
# URMSE, ideally zero
out$URMSE = sqrt((sum(cv$residual^2) / length(cv$residual)) - mean(cv$residual)^2)
# Inter quartile range, ideally small
out$iqr = IQR(cv$residual)
out = lapply(out, signif, digits = digits)
out = t(t(out))
return(out)
}
computeCVStatistics(out)
out <- krige.cv(d~1, df, variogram.robust.best$var_model, nfold=32)
computeCVStatistics(out)
computeCVStatistics <- function(cv, digits=4){
out = list()
# mean error, ideally 0:
out$mean_error = mean(cv$residual)
# mean error divided by the mean of the observed values, measure for how large the mean_error is in contrast to the mean of the dataset
out$me_mean = out$mean_error / mean(cv$observed)
# mean absolute error, ideally 0, less vulnerable to outliers
out$MAE = mean(abs(cv$residual))
# MSE, ideally small
out$MSE = mean(cv$residual^2)
# Mean square normalized error, ideally close to 1
out$MSNE = mean(cv$zscore^2)
# correlation observed and predicted, ideally 1
out$cor_obspred = cor(cv$observed, cv$observed - cv$residual)
# correlation predicted and residual, ideally 0
out$cor_predres = cor(cv$observed - cv$residual, cv$residual)
# RMSE, ideally small
out$RMSE = sqrt(sum(cv$residual^2) / length(cv$residual))
# RMSE / sd(observed), measure for how much the residuals vary to the total variation in the dataset
out$RMSE_sd = out$RMSE / sd(cv$observed)
# URMSE, ideally zero
out$URMSE = sqrt((sum(cv$residual^2) / length(cv$residual)) - mean(cv$residual)^2)
# Inter quartile range, ideally small
out$iqr = IQR(cv$residual)
out = lapply(out, signif, digits = digits)
out = t(t(out))
colnames(out) <- c("Values")
return(out)
}
computeCVStatistics(out)
computeCVStatistics(out)["MAE"]
computeCVStatistics(out)[,"MAE"]
computeCVStatistics(out)[["MAE"]]
computeCVStatistics(out)$MAE
a <- computeCVStatistics(out)
a[1]
computeCVStatistics <- function(cv, digits=4){
out = list()
# mean error, ideally 0:
out$mean_error = mean(cv$residual)
# mean error divided by the mean of the observed values, measure for how large the mean_error is in contrast to the mean of the dataset
out$me_mean = out$mean_error / mean(cv$observed)
# mean absolute error, ideally 0, less vulnerable to outliers
out$MAE = mean(abs(cv$residual))
# MSE, ideally small
out$MSE = mean(cv$residual^2)
# Mean square normalized error, ideally close to 1
out$MSNE = mean(cv$zscore^2)
# correlation observed and predicted, ideally 1
out$cor_obspred = cor(cv$observed, cv$observed - cv$residual)
# correlation predicted and residual, ideally 0
out$cor_predres = cor(cv$observed - cv$residual, cv$residual)
# RMSE, ideally small
out$RMSE = sqrt(sum(cv$residual^2) / length(cv$residual))
# RMSE / sd(observed), measure for how much the residuals vary to the total variation in the dataset
out$RMSE_sd = out$RMSE / sd(cv$observed)
# URMSE, ideally zero
out$URMSE = sqrt((sum(cv$residual^2) / length(cv$residual)) - mean(cv$residual)^2)
# Inter quartile range, ideally small
out$iqr = IQR(cv$residual)
out = lapply(out, signif, digits = digits)
#out = t(t(out))
colnames(out) <- c("Value")
return(out)
}
a <- computeCVStatistics(out)
computeCVStatistics <- function(cv, digits=4){
out = list()
# mean error, ideally 0:
out$mean_error = mean(cv$residual)
# mean error divided by the mean of the observed values, measure for how large the mean_error is in contrast to the mean of the dataset
out$me_mean = out$mean_error / mean(cv$observed)
# mean absolute error, ideally 0, less vulnerable to outliers
out$MAE = mean(abs(cv$residual))
# MSE, ideally small
out$MSE = mean(cv$residual^2)
# Mean square normalized error, ideally close to 1
out$MSNE = mean(cv$zscore^2)
# correlation observed and predicted, ideally 1
out$cor_obspred = cor(cv$observed, cv$observed - cv$residual)
# correlation predicted and residual, ideally 0
out$cor_predres = cor(cv$observed - cv$residual, cv$residual)
# RMSE, ideally small
out$RMSE = sqrt(sum(cv$residual^2) / length(cv$residual))
# RMSE / sd(observed), measure for how much the residuals vary to the total variation in the dataset
out$RMSE_sd = out$RMSE / sd(cv$observed)
# URMSE, ideally zero
out$URMSE = sqrt((sum(cv$residual^2) / length(cv$residual)) - mean(cv$residual)^2)
# Inter quartile range, ideally small
out$iqr = IQR(cv$residual)
out = lapply(out, signif, digits = digits)
#out = t(t(out))
#colnames(out) <- c("Value")
return(out)
}
a <- computeCVStatistics(out)
a
a["MAE"]
a[["MAE"]
]
# Leave-one-out cross validation
computeCV <- function (data, length, var_model) {
df <- data.frame("data"=data, "x"=c(1:length), "y"=rep(1, length))
coordinates(df) <- ~x+y
out <- krige.cv(data~1, df, var_model, nfold=length)
return(out)
}
computeCV(research.data.residuals, kObservationNum, variogram.robust.best)
computeCV(research.data.residuals, 32, variogram.robust.best)
computeCV(research.data.residuals, 32, variogram.robust.best$var_model)
computeCV(c(1,2,3,4,5,6,7,8), 8, ComputeVariogram(data=c(1,2,3,4,5,6,7,8), x=c(1:8), cressie=FALSE, cutoff=6, width=FALSE)$var_model)
computeCVStatistics(computeCV(research.data.residuals, 32, variogram.robust.best$var_model))
t(t(computeCVStatistics(computeCV(research.data.residuals, 32, variogram.robust.best$var_model))))
cv.manual <- computeCV(research.data.residuals, 32, variogram.manual$var_model)
cv.robust <- computeCV(research.data.residuals, 32, variogram.robust$var_model)
cv.robust.best <- computeCV(research.data.residuals, 32, variogram.robust.best$var_model)
computeCVStatistics(cv.manual)
source('~/study/bachelors-thesis/R/draft-cv.R', echo=TRUE)
computeCVStatistics(cv.manual)
computeCVStatistics(cv.robust)
computeCVStatistics(cv.robust.best)
computeCV(c(1,2,3,4,5,6,7,8), 8, ComputeVariogram(data=c(1,2,3,4,5,6,7,8), x=c(1:8), cressie=FALSE, cutoff=6, width=FALSE)$var_model)
cv.example <- computeCV(c(1,2,3,4,5,6,7,8), 8, ComputeVariogram(data=c(1,2,3,4,5,6,7,8), x=c(1:8), cressie=FALSE, cutoff=6, width=FALSE)$var_model)
computeCVStatistics(cv.example)
out <- krige.cv(d~1, df, variogram.robust.best$var_model, nfold=32)
computeCVStatistics(out)
cv.manual
cv.manual$observed -cv.manual$residual
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = 1,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
## Dependencies
library(ggplot2)  # eye-candy graphs
library(xtable)   # convert data to latex tables
library(outliers) # tests for outliers
library(tseries)  # adf test used
library(nortest)  # tests for normality
library(sp)       # spatial data
library(gstat)    # geostatistics
library(reshape2) # will see
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = 1,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
variogram.robust
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = F,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
variogram.robust
ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = 5)
ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = 1)
ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = 2)
ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = 1)
ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = 6)
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = 6,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = 1,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width = 2,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
variogram.robust
cv.robust <- computeCV(research.data.residuals, 32, variogram.robust$var_model)
computeCVStatistics(cv.robust)
ComparePredictionParameters(research.data.residuals, research.data.trend, ConvertYearsToNum(research.data$year), filename="figures/variogram/parameter-comparison.png", width=2)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source("R/lib/afv.R")
source("R/lib/variogram.R")
source("R/lib/kriging.R")
## Function definition: need to be moved into isolated place
### Just definition of mean standard error // TODO: find out exact formula and describe each parameter
MSE <- function (e, N=1) {
sum(sapply(X=e, FUN=function(x) x**2)) / length(e)
}
# Completes trend values up to source observation number
computeTrend <- function (fit, future=0) {
c(sapply(c(1 : (src.nrows + future)), FUN=function(x) fit$coefficients[[1]] + x * fit$coefficients[[2]]))
}
kObservationNum <- 32
## Form the data for research again
research.data <- src.data[0:kObservationNum, ]
research.data.fit <- lm(research.data$temperature ~ ConvertYearsToNum(research.data$year))
research.data.residuals <- research.data.fit$residuals
research.data.trend <- computeTrend(research.data.fit)
cutoff <- trunc(2 * kObservationNum / 3) # let it be "classical" value
#cutoff <- 2
# Draw H-Scatterplot
research.data.hscat <- DrawHScatterplot(research.data.residuals[1:kObservationNum], cutoff)
# Compute variogram manually with choosed model (best what i could found)
variogram.manual <- ComputeManualVariogram(research.data.residuals, cutoff=cutoff, file_modeled="figures/variogram/manual-model.png")
# Compute variogram with auto fit model using classical estimation
variogram.classical <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=FALSE, cutoff=cutoff, width=FALSE,
file_empirical="figures/variogram/classical-empirical.png",
file_modeled="figures/variogram/classical-modeled.png")
WriteCharacteristic(variogram.classical$var_model[[2]][1], type="variogram", name="classical-nug")
WriteCharacteristic(variogram.classical$var_model[[2]][2], type="variogram", name="classical-psill")
WriteCharacteristic(variogram.classical$var_model[[3]][2], type="variogram", name="classical-range")
# Compute variogram with auto fit model using robust (cressie) estimation
variogram.robust <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=FALSE,
file_empirical="figures/variogram/robust-empirical.png",
file_modeled="figures/variogram/robust-modeled.png")
WriteCharacteristic(variogram.robust$var_model[[2]][1], type="variogram", name="robust-nug")
WriteCharacteristic(variogram.robust$var_model[[2]][2], type="variogram", name="robust-psill")
WriteCharacteristic(variogram.robust$var_model[[3]][2], type="variogram", name="robust-range")
models.comparison <- CompareClassicalModels(variogram.manual, variogram.classical, filename="figures/variogram/models-comparison.png")
kriging.manual    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.manual$var_model)
kriging.classical <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.classical$var_model)
kriging.robust    <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.robust$var_model)
prediction.manual <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.manual$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.manual, caption="Прогноз (сферическая модель)", label="table:prediction-manual", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-manual.tex")
prediction.classical <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.classical$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.classical, caption="Прогноз (классическая оценка)", label="table:prediction-classical", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-classical.tex")
prediction.robust <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.robust$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.robust, caption="Прогноз (робастная оценка)", label="table:prediction-robust", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-robust.tex")
res.manual <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.manual,    "figures/variogram/cross-prediction-manual.png")
res.classical <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.classical, "figures/variogram/cross-prediction-classical.png")
res.robust <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust,    "figures/variogram/cross-prediction-robust.png")
mse.manual    <- MSE(res.manual)
mse.classical <- MSE(res.classical)
mse.robust    <- MSE(res.robust)
WriteCharacteristic(mse.manual, type="variogram", name="manual-mse")
WriteCharacteristic(mse.classical, type="variogram", name="classical-mse")
WriteCharacteristic(mse.robust, type="variogram", name="robust-mse")
# Find best cutoff parameter
ComparePredictionParameters(research.data.residuals, research.data.trend, ConvertYearsToNum(research.data$year), filename="figures/variogram/parameter-comparison.png")
# Best prediction as we investigated is for robust kriging with cutoff=6. Let's make it!
variogram.robust.best <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=6, width=FALSE,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
kriging.robust.best <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.robust.best$var_model)
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
mse.robust.best <- MSE(res.robust.best)
prediction.robust.best <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.robust.best$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.robust.best, caption="Наилучший прогноз (робастная оценка)", label="table:prediction-robust-best", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-robust-best.tex")
WriteCharacteristic(mse.robust.best, type="variogram", name="robust-best-mse")
## TODO: form krige matrix for analysis
source('~/study/bachelors-thesis/R/master.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
ComparePredictionParameters(research.data.residuals, research.data.trend, ConvertYearsToNum(research.data$year), filename="figures/variogram/parameter-comparison.png", width=2)
ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=2,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
v <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=2,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=v$var_model)
k <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=v$var_model)
CrossPrediction(src.data$temperature, src.data$year, research.data.trend, k, "figures/variogram/cross-prediction-robust-best.png")
v <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=6,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
k <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=v$var_model)
CrossPrediction(src.data$temperature, src.data$year, research.data.trend, k, "figures/variogram/cross-prediction-robust-best.png")
v <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=1, verbose=T,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
source('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
v <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=6,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
v
source('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
v <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=6,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
v <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=1,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
warnings()
source('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
v <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=1,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
v
source('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
v <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=1,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
v
source('~/study/bachelors-thesis/R/master.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
v <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff, width=1,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
k <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=v$var_model)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
ComparePredictionParameters(research.data.residuals, research.data.trend, ConvertYearsToNum(research.data$year), filename="figures/variogram/parameter-comparison.png")
source('~/.active-rstudio-document', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
variogram.robust.best <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=7, width=FALSE,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
kriging.robust.best <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.robust.best$var_model)
res.robust.best <- CrossPrediction(src.data$temperature, src.data$year, research.data.trend, kriging.robust.best, "figures/variogram/cross-prediction-robust-best.png")
mse.robust.best <- MSE(res.robust.best)
prediction.robust.best <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.robust.best$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
variogram.classical <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=FALSE, cutoff=6, width=FALSE,
file_empirical="figures/variogram/classical-empirical.png",
file_modeled="figures/variogram/classical-modeled.png")
kriging.classical <- PredictWithKriging(research.data.residuals, x=ConvertYearsToNum(research.data$year), variogram_model=variogram.classical$var_model)
prediction.classical <- data.frame("Год"=src.data$year[(kObservationNum + 1):src.nrows],
"Наблюдаемое"=src.data$temperature[(kObservationNum + 1):src.nrows],
"Прогнозное"=kriging.classical$var1.pred+research.data.trend[(kObservationNum + 1):src.nrows],
"Тренд"=research.data.trend[(kObservationNum + 1):src.nrows])
print(xtable(prediction.classical, caption="Прогноз (классическая оценка)", label="table:prediction-classical", digits=c(0, 0, 3, 3, 3)),
file="out/variogram/prediction-classical.tex")
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/variogram.R', echo=TRUE)
source('~/study/bachelors-thesis/R/lib/kriging.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
cutoff
variogram.classical.best
source('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
source('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
variogram.classical.best
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
source('~/study/bachelors-thesis/R/predictor.R', echo=TRUE)
variogram.robust.best <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff$robust,
file_empirical="figures/variogram/robust-best-empirical.png",
file_modeled="figures/variogram/robust-best-modeled.png")
source('~/study/bachelors-thesis/R/master.R', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
variogram.classical <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=FALSE, cutoff=5,
file_empirical="figures/variogram/classical-empirical.png",
file_modeled="figures/variogram/classical-modeled.png")
test_models
test_models
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
variogram.classical <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=FALSE, cutoff=5,
file_empirical="figures/variogram/classical-empirical.png",
file_modeled="figures/variogram/classical-modeled.png")
m
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
variogram.classical <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=FALSE, cutoff=5,
file_empirical="figures/variogram/classical-empirical.png",
file_modeled="figures/variogram/classical-modeled.png")
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
debugSource('~/study/bachelors-thesis/R/archive/variogram_analysis/afv.r', echo=TRUE)
variogram.classical <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=FALSE, cutoff=5,
file_empirical="figures/variogram/classical-empirical.png",
file_modeled="figures/variogram/classical-modeled.png")
source('~/study/bachelors-thesis/R/master.R', echo=TRUE)
variogram.classical <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=FALSE, cutoff=5,
file_empirical="figures/variogram/classical-empirical.png",
file_modeled="figures/variogram/classical-modeled.png")
variogram.classical.best <- ComputeVariogram(data=research.data.residuals, x=ConvertYearsToNum(research.data$year), cressie=TRUE, cutoff=cutoff$classical,
file_empirical="figures/variogram/classical-best-empirical.png",
file_modeled="figures/variogram/classical-best-modeled.png")
variogram.classical.best
