kex <- PredictWithKriging(c(1,2,3,4,5,6), x=c(1:8), observations=6, variogram_model = vex$var_model, nrows=8)
kex <- PredictWithKriging(c(1,2,3,4,5,6), x=c(1:8), observations=6, variogram_model = vex$var_model, nrows=8, pred=c(1,2,3,NA,5,6))
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred <- c((observations + 1):(nrows + future))
}
new_data <- data.frame("X"=pred, "Y"=rep(1, nrows - observations + future))
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
kex <- PredictWithKriging(c(1,2,3,4,5,6), x=c(1:8), observations=6, variogram_model = vex$var_model, nrows=8, pred=c(1,2,3,NA,5,6))
4
kex <- PredictWithKriging(c(1,2,3,4,5,6), x=c(1:8), observations=6, variogram_model = vex$var_model, nrows=8)
kex <- PredictWithKriging(c(1,2,3,4,5,6), x=c(1:8), observations=6, variogram_model = vex$var_model, nrows=8, pred=c(4))
kex
kex <- PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=6, variogram_model = vex$var_model, nrows=8, pred=c(4,5))
kex <- PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(4,5))
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=c()) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (length(pred) == 0) {
pred <- c((observations + 1):(nrows + future))
}
new_data <- data.frame("X"=pred, "Y"=rep(1, nrows - observations + future))
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
kex <- PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(4,5))
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=c()) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
print(pred)
print(length(pred))
if (length(pred) == 0) {
pred <- c((observations + 1):(nrows + future))
}
new_data <- data.frame("X"=pred, "Y"=rep(1, nrows - observations + future))
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
vex <- ComputeVariogram(data=c(1,2,3,4,5,6,7,8), x=c(1:8), cressie=FALSE, cutoff=6, observations=8)
kex <- PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(4,5))
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=c()) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
print(pred)
print(length(pred))
if (length(pred) == 0) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- pred
pred2 <- rep(1, length(pred))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
kex <- PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(4,5))
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=c()) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (length(pred) == 0) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- pred
pred2 <- rep(1, length(pred))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
kex <- PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(4,5))
kex
kex <- PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(4))
kex
kex <- PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(1))
kex
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(2))
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(3))
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(4))
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(8))
vex <- ComputeVariogram(data=c(1:100), x=c(1:100), cressie=FALSE, cutoff=6, observations=100)
kex <- PredictWithKriging(c(1:100), x=c(1:100), observations=100, variogram_model = vex$var_model, nrows=100, pred=c(1))
PredictWithKriging(c(1:100), x=c(1:100), observations=100, variogram_model = vex$var_model, nrows=100, pred=c(1))
PredictWithKriging(c(1:100), x=c(1:100), observations=100, variogram_model = vex$var_model, nrows=100, pred=c(2))
PredictWithKriging(c(1:100), x=c(1:100), observations=100, variogram_model = vex$var_model, nrows=100, pred=c(3))
PredictWithKriging(c(1:100), x=c(1:100), observations=100, variogram_model = vex$var_model, nrows=100, pred=c(4))
PredictWithKriging(c(1:100), x=c(1:100), observations=100, variogram_model = vex$var_model, nrows=100, pred=c(5))
krige.cv(kex)
sample.residuals
variogram <- ComputeVariogram(sample.residuals, x=ConvertYearsToNum(src$year), cressie=TRUE, cutoff=6, observations=kObservationNum)
variogram <- ComputeVariogram(sample.residuals, x=ConvertYearsToNum(src$year), cressie=TRUE, cutoff=6, observations=kObservationNum)
kr <- PredictWithKriging(sample.residuals, observation=32, variogram_model = variogram, nrows=38, pred=c(1))
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram, nrows=38, pred=c(1))
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38, pred=c(1))
kr
sample.residuals
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38, pred=c(2))
PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38, pred=c(2))
PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38, pred=c(2,3))
PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38, pred=c(2,3,4,5,6,7,8))
PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38, pred=c(35:38))
debugSource('~/study/bachelors-thesis/R/lib/kriging.R')
PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38, pred=c(35:38))
new_data
vex <- ComputeVariogram(data=c(1,2,3,4,5,6,7,8), x=c(1:8), cressie=FALSE, cutoff=6, observations=8)
vex <- ComputeVariogram(data=c(1,2,3,4,5,6,7,8), x=c(1:8), cressie=FALSE, cutoff=6, observations=8)
kex <- PredictWithKriging(c(1,2,3,NA,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(4))
kex <- PredictWithKriging(c(1,2,3,NA,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=c(4))
rep(NA, 1)
c(1:10)[1,2,3]
c(1:10)[c(1,2,3)]
c(1:10)[c(1,2,3)] <- c(4,5,6)
c(1:10)[c(1,2,3)] = NA
a <- data.fram(c(1:10), rep(1, 10))
a <- data.frame(c(1:10), rep(1, 10))
a <- data.frame(x=c(1:10), y=rep(1, 10))
coordinates(a) =~x+y
a
a[2] = na
a[2] = NA
a[2]
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)], NA, x[pred:length(x)])
pred2 <- c(rep(1, pred - 1), NA, rep(1, length(x)-pred))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)], NA, x[pred:length(x)])
pred2 <- c(rep(1, pred - 1), NA, rep(1, length(x)-pred))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=4)
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)], NA, x[pred:length(x)])
pred2 <- c(rep(1, pred - 1), NA, rep(1, length(x)-pred-1))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=4)
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)], NA, x[pred:length(x)])
pred2 <- c(rep(1, pred - 1), NA, rep(1, length(x)-pred+1))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=4)
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)], NA, x[pred:length(x)])
pred2 <- c(rep(1, pred - 1), NA, rep(1, length(x)-pred+1))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
print(new_data)
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=4)
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)], x[pred:length(x)])
pred2 <- c(rep(1, pred - 1), rep(1, length(x)-pred+1))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
print(new_data)
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=4)
PredictWithKriging(c(1,2,3,NA,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=4)
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)],NA, x[(pred+1):length(x)])
pred2 <- c(rep(1, pred - 1),NA, rep(1, length(x)-pred))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
print(new_data)
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=4)
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)],x[(pred+1):length(x)])
pred2 <- c(rep(1, pred - 1), rep(1, length(x)-pred))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
print(new_data)
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
PredictWithKriging(c(1,2,3,4,5,6,7,8), x=c(1:8), observations=8, variogram_model = vex$var_model, nrows=8, pred=4)
summary(sample.fit)
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)],x[(pred+1):length(x)])
pred2 <- c(rep(1, pred - 1), rep(1, length(x)-pred))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
print(new_data)
coordinates(new_data) = ~X+Y
krige(formula=data~1, data=src_data, newdata=new_data, model=variogram_model, debug.level=0)
}
variogram <- ComputeVariogram(sample.residuals, x=ConvertYearsToNum(src$year), cressie=TRUE, cutoff=6, observations=kObservationNum)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38, pred=c(1))
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)],x[(pred+1):length(x)])
pred2 <- c(rep(1, pred - 1), rep(1, length(x)-pred))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
print(new_data)
coordinates(new_data) = ~X+Y
krige(formula=data~1, locations=src_data, newdata=new_data, model=variogram_model, debug.level=0)
}
variogram <- ComputeVariogram(sample.residuals, x=ConvertYearsToNum(src$year), cressie=TRUE, cutoff=6, observations=kObservationNum)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
kr
computeCV <- function (data, length, var_model) {
df <- data.frame(data=data, "x"=c(1:length), "y"=rep(1, length))
coordinates(df) <- ~x+y
out <- krige.cv(data~1, locations=df, var_model, nfold=length)
return(out)
}
variogram <- ComputeVariogram(sample.residuals, x=ConvertYearsToNum(src$year), cressie=TRUE, cutoff=6, observations=kObservationNum)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
cv.robust.best <- computeCV(sample.residuals, kObservationNum, variogram$var_model)
cv.robust.best
variogram <- vgm("Lin", nugget=0.3, range=6, psill=2)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
kr
sample.residuals
fit = lm(sample$temperature ~ c(1:nrows))
fit = lm(src$temperature ~ c(1:nrows))
fit = lm(src$temperature ~ c(1:nrows))
fit$residuals
c(fit$residuals)
fit$residuals[1]
fit$residuals[,1]
fit$residuals[1,]
fit$residuals[[1]]
fit$residuals[[1,]]
fit$residuals[[,1]]
fit$residuals[1]
class(fit$residuals[1])
fit$residuals[1][1]
fit$residuals[1][[1]]
res <- sapply(fit$residuals, FUN=function(x) x[[1]])
res
res <- sapply(1:nrows, FUN=function(i) fit$residuals[[i]])
res
cv.robust.best <- computeCV(res, nrows, variogram$var_model)
cv.robust.best
variogram <- vgm("Lin", nugget=0.3, range=6, psill=2)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
kr
cv.robust.best <- computeCV(res, 32, variogram$var_model)
fit = lm(src$temperature[1:32] ~ c(1:32))
res <- sapply(1:32, FUN=function(i) fit$residuals[[i]])
variogram <- vgm("Lin", nugget=0.3, range=6, psill=2)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
cv.robust.best <- computeCV(res, 32, variogram$var_model)
cv.robust.best
computeCVStatistics(cv.robust.best)
res <- fit$residuals #sapply(1:32, FUN=function(i) fit$residuals[[i]])
variogram <- vgm("Lin", nugget=0.3, range=6, psill=2)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
cv.robust.best <- computeCV(res, 32, variogram$var_model)
kr
lm(src$temperature[1:38] ~ c(1:38))$residuals[33:38]
shiny::runApp('R/shiny')
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)],x[(pred+1):length(x)])
pred2 <- c(rep(1, pred - 1), rep(1, length(x)-pred))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
print(new_data)
coordinates(new_data) = ~X+Y
krige(formula=data~1, src_data, newdata=new_data, model=variogram_model, debug.level=0)
}
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0, pred=F) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
if (!pred) {
pred1 <- c((observations + 1):(nrows + future))
pred2 <- rep(1, nrows - observations + future)
} else {
pred1 <- c(x[1:(pred-1)],x[(pred+1):length(x)])
pred2 <- c(rep(1, pred - 1), rep(1, length(x)-pred))
}
new_data <- data.frame("X"=pred1, "Y"=pred2)
coordinates(new_data) = ~X+Y
krige(formula=data~1, src_data, newdata=new_data, model=variogram_model, debug.level=0)
}
fit = lm(src$temperature[1:32] ~ c(1:32))
res <- fit$residuals #sapply(1:32, FUN=function(i) fit$residuals[[i]])
variogram <- vgm("Lin", nugget=0.3, range=6, psill=2)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
cvb <- computeCV(res, 32, variogram$var_model)
fit = lm(src$temperature[1:32] ~ c(1:32))
res <- fit$residuals #sapply(1:32, FUN=function(i) fit$residuals[[i]])
variogram <- vgm("Lin", nugget=0.3, range=6, psill=2)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
cvb <- computeCV(res, 32, variogram$var_model)
# Leave-one-out cross validation
computeCV <- function (data, length, var_model) {
df <- data.frame(data=data, "x"=c(1:length), "y"=rep(1, length))
coordinates(df) <- ~x+y
out <- krige.cv(data~1, locations=df, var_model, nfold=length)
return(out)
}
fit = lm(src$temperature[1:32] ~ c(1:32))
res <- fit$residuals #sapply(1:32, FUN=function(i) fit$residuals[[i]])
variogram <- vgm("Lin", nugget=0.3, range=6, psill=2)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
cvb <- computeCV(res, 32, variogram$var_model)
cvb
kr
source('~/.active-rstudio-document')
## Calculates kriging prediction based on passed variogram model
PredictWithKriging <- function (data, x, observations, variogram_model, nrows, future=0) {
y <- rep(1, observations)
src_data <- data.frame(cbind("x"=x, "y"=y, data))
coordinates(src_data) = ~x+y
new_data <- data.frame("X"=c((observations + 1):(nrows + future)), "Y"=rep(1, nrows - observations + future))
coordinates(new_data) = ~X+Y
krige(data~1, src_data, new_data, model=variogram_model, debug.level=0)
}
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
kr
# Leave-one-out cross validation
computeCV <- function (data, length, var_model) {
df <- data.frame(data=data, "x"=c(1:length), "y"=rep(1, length))
coordinates(df) <- ~x+y
out <- krige.cv(data~1, df, var_model, nfold=length)
return(out)
}
fit = lm(src$temperature[1:32] ~ c(1:32))
res <- fit$residuals #sapply(1:32, FUN=function(i) fit$residuals[[i]])
variogram <- vgm("Lin", nugget=0.3, range=6, psill=2)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
cvb <- computeCV(res, 32, variogram$var_model)
cvb
variogram <- ComputeVariogram(sample.residuals, x=ConvertYearsToNum(src$year), cressie=TRUE, cutoff=6, observations=kObservationNum)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
cv.robust.best <- computeCV(sample.residuals, kObservationNum, variogram$var_model)
cv.robust.best
variogram <- vgm("Lin", nugget=0.3, range=6, psill=2)
kr <- PredictWithKriging(sample.residuals, x=ConvertYearsToNum(src$year), observation=32, variogram_model = variogram$var_model, nrows=38)
cv.robust.best <- computeCV(sample.residuals, kObservationNum, variogram$var_model)
cv.robust.best
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
list(cv=1, d=2)
list(cv=1, d=2)["cv"]
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
source('~/study/bachelors-thesis/R/lib/variogram.R')
source('~/study/bachelors-thesis/R/lib/variogram.R')
lin.var1 <- ComputeManualVariogram(data=sample.residuals, year=sample$year, cressie=FALSE, cutoff=cutoff, model="Lin", name="lin", psill=1, range=1, nugget=1 fit=FALSE)
lin.var1 <- ComputeManualVariogram(data=sample.residuals, year=sample$year, cressie=FALSE, cutoff=cutoff, model="Lin", name="lin", psill=1, range=1, nugget=1, fit=FALSE)
lin.var1 <- ComputeManualVariogram(data=sample.residuals, x=sample$year, cressie=FALSE, cutoff=cutoff, model="Lin", name="lin", psill=1, range=1, nugget=1, fit=FALSE)
lin.var1 <- ComputeManualVariogram(data=sample.residuals, x=sample$year, cressie=FALSE, cutoff=21, model="Lin", name="lin", psill=1, range=1, nugget=1, fit=FALSE)
lin.var1 <- ComputeManualVariogram(data=sample.residuals, x=sample$year, cressie=FALSE, cutoff=21, model="Lin", name="lin", psill=1, range=0, nugget=1, fit=FALSE)
lin.var1 <- ComputeManualVariogram(data=sample.residuals, x=sample$year, cressie=FALSE, cutoff=21, model="Lin", name="lin", psill=1, range=0, nugget=0, fit=FALSE)
lin.var1 <- ComputeManualVariogram(data=sample.residuals, x=sample$year, cressie=FALSE, cutoff=21, model="Lin", name="lin", psill=0.1, range=0, nugget=0, fit=FALSE)
lin.var1 <- ComputeManualVariogram(data=sample.residuals, x=sample$year, cressie=FALSE, cutoff=21, model="Lin", name="lin", psill=3.5, range=0, nugget=0, fit=FALSE)
source('~/study/bachelors-thesis/R/predictor.R')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
shiny::runApp('R/shiny')
